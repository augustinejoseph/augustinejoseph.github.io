name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build and export static files
        run: |
          npm run build
          npm run export

      - name:  List out directory contents
        run: ls -la out/

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # git config user.name "GitHub Actions"
          # git config user.email "github-actions[bot]@users.noreply.github.com"

          # # Copy built files
          # cp -a out/. .

          # ls -la

          # # Stage all changes
          # git add .

          # # Create a descriptive commit message
          # git commit -m "Deploy to GitHub Pages: [$(git rev-parse --short HEAD)]"

          # # Fetch all branches (including remote)
          # git fetch --all

          # # Checkout gh-pages
          # git checkout gh-pages

          # # Handle potential conflicts (optional)
          # if git merge --ff-only origin/gh-pages; then
          #   echo "Fast-forward merge successful. No conflicts detected."
          # else
          #   echo "Merge conflicts detected! Resolve conflicts manually and run 'git add' for resolved files."
          #   echo "Then, run 'git rebase --continue' to complete the rebase."
          #   exit 1  # Exit with non-zero code to indicate failure
          # fi

          # # Push changes to gh-pages (force push if necessary)
          # git push origin gh-pages --force

          # # Print post-push status
          # echo "Deployment status:"
          # git status 



          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch --all

          # Checkout gh-pages branch
          git checkout gh-pages

          # Clean up existing files (except out folder)
          rm -rf node_modules/
          find . -not -path "./out" -not -path "./.git" -not -path "./" -delete

          echo "List after deleting...."
          ls -al

          cp -r out/* .

          echo "List after copying from out to root...."
          la -al

          # Stage all changes
          git add .


          # Create a descriptive commit message
          git commit -m "Deploy to GitHub Pages: [$(git rev-parse --short HEAD)]"
          git log

          # Push changes to gh-pages (force push if necessary)
          git push origin gh-pages --force-with-lease

          # Print post-push status
          echo "Deployment status:"
          git status 