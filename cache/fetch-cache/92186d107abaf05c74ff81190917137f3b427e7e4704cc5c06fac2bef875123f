{"kind":"FETCH","data":{"headers":{"access-control-allow-headers":"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range","access-control-allow-methods":"GET, POST, OPTIONS","access-control-allow-origin":"*","access-control-expose-headers":"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range","cache-control":"public, max-age=1800","cf-cache-status":"DYNAMIC","cf-ray":"900a870e7b1240e4-SIN","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json;charset=utf-8","date":"Sun, 12 Jan 2025 04:50:46 GMT","etag":"W/\"fdc2a00b0616a1201e458817ca5967a25a5e2cc7\"","last-modified":"Sun, 12 Jan 2025 02:16:00 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=3S%2FWmt7qvhdK4k17N37VWLP4MCTXEEoNAswvN5qR9JxfSYZDTZ8MN146%2B%2FQwSI3voXxc6jvL8I3Wy9%2FaeavXpd1tv0KLl8LBIxjxKTKNpSOcnFLG%2F3w2TIH9YCeQPQSKgfGyg61llhivAZXtSWU%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","server-timing":"cfL4;desc=\"?proto=TCP&rtt=105628&min_rtt=104767&rtt_var=41011&sent=5&recv=5&lost=0&retrans=0&sent_bytes=2845&recv_bytes=723&delivery_rate=34604&cwnd=252&unsent_bytes=0&cid=030ff2ba841c4f38&ts=314&x=0\"","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"{"status":"ok","feed":{"url":"https://medium.com/feed/@augustinejoseph","title":"Stories by Augustine Joseph on Medium","link":"https://medium.com/@augustinejoseph?source=rss-a466d6a4ac30------2","author":"","description":"Stories by Augustine Joseph on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*PjpN6nyxFZcADaIG64Qvuw.jpeg"},"items":[{"title":"Nextjs\u200a\u2014\u200aSEO Optimization","pubDate":"2025-01-11 16:33:02","link":"https://augustinejoseph.medium.com/nextjs-seo-optimization-f4714b267766?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/f4714b267766","author":"Augustine Joseph","thumbnail":"","description":"\n<h3>Nextjs\u200a\u2014\u200aSEO Optimization</h3>\n<p>Best practices for SEO Perfomance for Next.js applications.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zuF-1WkEHxRyppUg-Or2VQ.png\"></figure><h3>Metadata</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*e_De3Cm4UO_VEWDf4Pq6nw.png\"><figcaption>Metadata on webpage\u00a0inspect</figcaption></figure><h4>1. Static\u00a0Metadata</h4>\n<p>Static metadata defined using a metaData object exported from a layout.tsx or page.tsxfile. This object contains information that remains constant across all page renders.<br>This static metadata is suitable for information that doesn\u2019t change based on runtime\u00a0data.</p>\n<pre><br>import type { Metadata } from \"next\";<br><br>export const metadata: Metadata = {<br>  title: {<br>    default: \"My Blog\",<br>    template: \"%s - My Blog\",<br>  },<br><br>  description: \"Read the articles!\",<br><br>  robots: {<br>    index: true,<br>    follow: true,<br>  },<br><br>  openGraph: {<br>    type: \"website\",<br>    url: \"https://www.myblogposts.com\",<br>    title: \"My Awesome Blog\",<br>    description: \"Come and read my awesome articles!\",<br>    images: [<br>      {<br>        url: \"https://www.myblogposts.com/images/og-image.jpg\",<br>        width: 1200,<br>        height: 630,<br>        alt: \"My Blog - Latest Articles\",<br>      },<br>    ],<br>    siteName: \"My Blog\",<br>  },<br><br>  twitter: {<br>    card: \"summary_large_image\",<br>    site: \"@myblogposts\",<br>    title: \"My Blog\",<br>    description: \"Come and read my awesome articles!\",<br>    images: [<br>      {<br>        url: \"https://www.myblogposts.com/images/twitter-card.jpg\",<br>        alt: \"Twitter Card Image\",<br>      },<br>    ],<br>  },<br><br>  keywords: [\"awesome blog\", \"articles\", \"technology\", \"web development\"],<br><br>  alternates: {<br>    canonical: \"https://www.myblogposts.com\",<br>  },<br>};</pre>\n<h4>title</h4>\n<p><strong>Use</strong>: Defines the default title of the webpage.<br><strong>Use Case\u00a0: </strong>Displayed in the browser tab and search engine results. Helps improve\u00a0SEO</p>\n<ul>\n<li>default: The default title when no specific page title is provided.</li>\n<li>template: A customizable format to append page-specific titles (e.g., blog post\u00a0title).</li>\n</ul>\n<h4>description</h4>\n<p><strong>Use</strong>: Provides a short description of the page.<br>This content is used by search engines and social media platforms (like Twitter and Facebook) in previews.</p>\n<h4>robots</h4>\n<p><strong>Use</strong>: Controls how search engine bots interact with your page.<br><strong>Use Case</strong>: Tells search engines whether to index or follow links on the\u00a0page.</p>\n<ul>\n<li>index: Whether search engines should index the\u00a0page.</li>\n<li>follow: Whether search engines should follow links on the\u00a0page.</li>\n</ul>\n<h4>openGraph</h4>\n<p><strong>Use</strong>: Controls how your content appears when shared on social media (Facebook, LinkedIn, etc.).<br><strong>Use Case</strong>: Enhances the display of your website when shared on social platforms by specifying rich content like images, descriptions, and\u00a0URLs.</p>\n<ul>\n<li>type: Defines the type of content (website, article,\u00a0etc.).</li>\n<li>url: The canonical URL of the\u00a0page.</li>\n<li>title, description: The preview content for social\u00a0media.</li>\n<li>images: An array of images used in the social media\u00a0preview.</li>\n<li>siteName: The name of your site displayed on social\u00a0media.</li>\n</ul>\n<h4>twitter</h4>\n<p><strong>Use</strong>: Defines how your page will appear when shared on Twitter.<br><strong>Use Case</strong>: Provides control over how your content is displayed as a Twitter\u00a0Card.</p>\n<ul>\n<li>card: Type of Twitter Card to use (summary, summary_large_image).</li>\n<li>site: Your Twitter\u00a0handle.</li>\n<li>title, description: Content for the Twitter\u00a0Card.</li>\n<li>images: Image URLs for Twitter\u00a0Card.</li>\n</ul>\n<h4>keywords</h4>\n<p><strong>Use</strong>: Provides a list of keywords relevant to the content.<br><strong>Use Case</strong>: Helps improve SEO by targeting specific search\u00a0terms.</p>\n<h4>alternates</h4>\n<p><strong>Use</strong>: Defines alternate URLs for different versions of your content.<br><strong>Use Case</strong>: Helps with SEO by specifying canonical links to avoid duplicate content\u00a0issues.</p>\n<h4>2. Dynamic\u00a0Metadata</h4>\n<p>generateMetadata function takes parameters representing the current route, search parameters, and resolves metadata from parent segments.</p>\n<pre>import { Metadata } from \"next\";<br><br>export async function generateMetadata({<br>  params: { postId },<br>}: BlogPostPageProps): Promise&lt;Metadata&gt; {<br>  const response = await fetch(`https://dummyjson.com/posts/${postId}`);<br>  const post: BlogPost = await response.json();<br><br>  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || \"http://localhost:3000\";<br>  const imageUrl = process.env.NEXT_PUBLIC_IMAGE_URL || `${baseUrl}/images`;<br><br>  return {<br>    title: post.title,<br>    description: post.body,<br><br>    keywords: [<br>      ...post.title.split(\" \"),<br>      \"blog\",<br>      \"articles\",<br>      \"web development\",<br>      \"technology\",<br>    ],<br><br>    openGraph: {<br>      type: \"article\",<br>      url: `${baseUrl}/posts/${postId}`,<br>      title: post.title,<br>      description: post.body,<br>      images: [<br>        {<br>          url: `${imageUrl}/og-image-${postId}.png`,<br>          width: 1200,<br>          height: 630,<br>          alt: `Open Graph image for ${post.title}`,<br>        },<br>      ],<br>      siteName: \"My Awesome Blog\",<br>    },<br><br>    twitter: {<br>      card: \"summary_large_image\",<br>      site: \"@myawesomeblog\",<br>      title: post.title,<br>      description: post.body,<br>      images: [<br>        {<br>          url: `${imageUrl}/twitter-card-${postId}.jpg`,<br>          alt: `Twitter Card image for ${post.title}`,<br>        },<br>      ],<br>    },<br><br>    alternates: {<br>      canonical: `${baseUrl}/posts/${postId}`,<br>    },<br>  };<br>}</pre>\n<p>The post\u2019s title, description, images, and keywords are dynamically generated based on the content. Each piece of content receives uniquely tailored metadata.</p>\n<h3>Caching</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6Q-6MBpe0nxHfDFGaDyI5g.png\"><figcaption>Building nextjs project without generateStaticParams</figcaption></figure><p>Here, the dynamic content is rendered on demand using Node.js, and the page is generated on each request by fetching data directly from the API. This ensures the page always has the latest content, but it can cause a performance hit since the data must be fetched every time the API is\u00a0hit.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TDjFENxfTjaqPTnP32P2uA.png\"><figcaption>Building nextjs project with generateStaticParams</figcaption></figure><p>Here, the dynamic content is rendered statically at <strong>build time</strong> for each post using generateStaticParams. The static pages are pre-rendered and cached, improving performance. The pages can be <strong>incrementally re-generated</strong> when the content changes, ensuring that the latest content is served to users without rebuilding the entire\u00a0site.</p>\n<blockquote>When managing a website with <strong>thousands of blog posts</strong>, using <strong>generateStaticParams</strong> to pre-render every post can become inefficient. This approach increases <strong>build time</strong>, <strong>deployment size</strong>, and puts unnecessary load on both the <strong>server</strong> and <strong>CDN</strong>. To address this, we can selectively generate static pages for only the <strong>most popular</strong> or <strong>trending posts</strong>, while utilizing <strong>Incremental Static Regeneration (ISR)</strong> and <strong>Server-Side Rendering (SSR)</strong> for less frequently accessed\u00a0content.</blockquote>\n<blockquote>For posts that are less popular or frequently changing, use <strong>ISR</strong> to regenerate the page in the background when it\u2019s requested. This ensures content remains fresh without re-building the entire\u00a0site.</blockquote>\n<h3>404 Not Found\u00a0Page</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uLHt9od_Jizfb7s2zvbAcg.png\"><figcaption>Not Fount\u00a0page.</figcaption></figure><p>A well-designed 404 page can enhance SEO performance in the following ways:</p>\n<ul>\n<li>\n<strong>Improves user experience</strong>: Guides visitors back to valuable content, keeping them on the site\u00a0longer.</li>\n<li>\n<strong>Reduces bounce rates</strong>: Minimizes the chances of a \u201chard bounce,\u201d which can negatively affect SEO rankings.</li>\n<li>\n<strong>Signals site quality</strong>: Search engines may interpret a helpful 404 page as an indication of a well-maintained site.</li>\n<li>\n<strong>Boosts engagement</strong>: A 404 page with relevant links or a search bar helps users find what they\u2019re looking for, increasing user interaction.</li>\n</ul>\n<h3>Dynamic Sitemap</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7Z7AwzmGrjZZrsFG3qMZiw.png\"><figcaption>Dynamic sitemap code and sitemap.xml file</figcaption></figure><p>A sitemap.ts file helps search engines crawl and index the website more effectively, improving SEO performance.</p>\n<p><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap\">Nextjs Documentation</a></p>\n<p><strong>1. Efficient URL Discovery</strong></p>\n<p>A sitemap provides search engines with a comprehensive list of URLs on your site. By dynamically fetching content (such as blog posts or product pages) from an external source or database, the sitemap ensures that all relevant pages are discoverable by search\u00a0engines.</p>\n<p><strong>2. Updated Content\u00a0Indexing</strong></p>\n<p>Including the lastModified field for each URL in the sitemap allows search engines to know when content was last updated. This helps ensure that updated pages or newly added content are indexed promptly, improving their chances of appearing in search results\u00a0faster.</p>\n<p><strong>3. Comprehensive Site Structure</strong></p>\n<p>A well-structured sitemap includes all important pages, such as blog posts, category pages, and static pages (like \u201cAbout\u201d or \u201cContact\u201d). This comprehensive representation of the site structure gives search engines a clear map of how your content is organized, ensuring that no important page is overlooked.</p>\n<p><strong>4. Improved Crawl\u00a0Budget</strong></p>\n<p>Search engines use a <strong>\u201ccrawl budget\u201d</strong> which determines how often and how deeply they crawl the website. A well-structured and accurate sitemap helps search engines use their crawl budget efficiently, ensuring that high-priority pages are crawled more frequently and thoroughly.</p>\n<h3>Robots file</h3>\n<p><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots\">Nextjs Documentation</a></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*M0yEX-Swe9g706mqKioCGQ.png\"><figcaption>Robots.txt file.</figcaption></figure><p>The robots.txt file used for controlling how search engine crawlers access and index the\u00a0website.</p>\n<ul>\n<li>\n<strong>Control Crawling</strong>: Specifies which pages or sections of your site should not be crawled by search engine\u00a0bots.</li>\n<li>\n<strong>Prevent Indexing</strong>: Helps prevent search engines from indexing specific pages, such as admin pages or duplicate content.</li>\n<li>\n<strong>Improve Crawl Budget</strong>: Directs crawlers to focus on important pages, ensuring they efficiently use the crawl\u00a0budget.</li>\n<li>\n<strong>Avoid Overload</strong>: Prevents bots from overloading your server by restricting access to non-essential resources.</li>\n<li>\n<strong>Manage Subdirectories</strong>: Directs crawlers to avoid certain subdirectories, like staging or testing environments, to keep them from being\u00a0indexed.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f4714b267766\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Nextjs\u200a\u2014\u200aSEO Optimization</h3>\n<p>Best practices for SEO Perfomance for Next.js applications.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zuF-1WkEHxRyppUg-Or2VQ.png\"></figure><h3>Metadata</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*e_De3Cm4UO_VEWDf4Pq6nw.png\"><figcaption>Metadata on webpage\u00a0inspect</figcaption></figure><h4>1. Static\u00a0Metadata</h4>\n<p>Static metadata defined using a metaData object exported from a layout.tsx or page.tsxfile. This object contains information that remains constant across all page renders.<br>This static metadata is suitable for information that doesn\u2019t change based on runtime\u00a0data.</p>\n<pre><br>import type { Metadata } from \"next\";<br><br>export const metadata: Metadata = {<br>  title: {<br>    default: \"My Blog\",<br>    template: \"%s - My Blog\",<br>  },<br><br>  description: \"Read the articles!\",<br><br>  robots: {<br>    index: true,<br>    follow: true,<br>  },<br><br>  openGraph: {<br>    type: \"website\",<br>    url: \"https://www.myblogposts.com\",<br>    title: \"My Awesome Blog\",<br>    description: \"Come and read my awesome articles!\",<br>    images: [<br>      {<br>        url: \"https://www.myblogposts.com/images/og-image.jpg\",<br>        width: 1200,<br>        height: 630,<br>        alt: \"My Blog - Latest Articles\",<br>      },<br>    ],<br>    siteName: \"My Blog\",<br>  },<br><br>  twitter: {<br>    card: \"summary_large_image\",<br>    site: \"@myblogposts\",<br>    title: \"My Blog\",<br>    description: \"Come and read my awesome articles!\",<br>    images: [<br>      {<br>        url: \"https://www.myblogposts.com/images/twitter-card.jpg\",<br>        alt: \"Twitter Card Image\",<br>      },<br>    ],<br>  },<br><br>  keywords: [\"awesome blog\", \"articles\", \"technology\", \"web development\"],<br><br>  alternates: {<br>    canonical: \"https://www.myblogposts.com\",<br>  },<br>};</pre>\n<h4>title</h4>\n<p><strong>Use</strong>: Defines the default title of the webpage.<br><strong>Use Case\u00a0: </strong>Displayed in the browser tab and search engine results. Helps improve\u00a0SEO</p>\n<ul>\n<li>default: The default title when no specific page title is provided.</li>\n<li>template: A customizable format to append page-specific titles (e.g., blog post\u00a0title).</li>\n</ul>\n<h4>description</h4>\n<p><strong>Use</strong>: Provides a short description of the page.<br>This content is used by search engines and social media platforms (like Twitter and Facebook) in previews.</p>\n<h4>robots</h4>\n<p><strong>Use</strong>: Controls how search engine bots interact with your page.<br><strong>Use Case</strong>: Tells search engines whether to index or follow links on the\u00a0page.</p>\n<ul>\n<li>index: Whether search engines should index the\u00a0page.</li>\n<li>follow: Whether search engines should follow links on the\u00a0page.</li>\n</ul>\n<h4>openGraph</h4>\n<p><strong>Use</strong>: Controls how your content appears when shared on social media (Facebook, LinkedIn, etc.).<br><strong>Use Case</strong>: Enhances the display of your website when shared on social platforms by specifying rich content like images, descriptions, and\u00a0URLs.</p>\n<ul>\n<li>type: Defines the type of content (website, article,\u00a0etc.).</li>\n<li>url: The canonical URL of the\u00a0page.</li>\n<li>title, description: The preview content for social\u00a0media.</li>\n<li>images: An array of images used in the social media\u00a0preview.</li>\n<li>siteName: The name of your site displayed on social\u00a0media.</li>\n</ul>\n<h4>twitter</h4>\n<p><strong>Use</strong>: Defines how your page will appear when shared on Twitter.<br><strong>Use Case</strong>: Provides control over how your content is displayed as a Twitter\u00a0Card.</p>\n<ul>\n<li>card: Type of Twitter Card to use (summary, summary_large_image).</li>\n<li>site: Your Twitter\u00a0handle.</li>\n<li>title, description: Content for the Twitter\u00a0Card.</li>\n<li>images: Image URLs for Twitter\u00a0Card.</li>\n</ul>\n<h4>keywords</h4>\n<p><strong>Use</strong>: Provides a list of keywords relevant to the content.<br><strong>Use Case</strong>: Helps improve SEO by targeting specific search\u00a0terms.</p>\n<h4>alternates</h4>\n<p><strong>Use</strong>: Defines alternate URLs for different versions of your content.<br><strong>Use Case</strong>: Helps with SEO by specifying canonical links to avoid duplicate content\u00a0issues.</p>\n<h4>2. Dynamic\u00a0Metadata</h4>\n<p>generateMetadata function takes parameters representing the current route, search parameters, and resolves metadata from parent segments.</p>\n<pre>import { Metadata } from \"next\";<br><br>export async function generateMetadata({<br>  params: { postId },<br>}: BlogPostPageProps): Promise&lt;Metadata&gt; {<br>  const response = await fetch(`https://dummyjson.com/posts/${postId}`);<br>  const post: BlogPost = await response.json();<br><br>  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || \"http://localhost:3000\";<br>  const imageUrl = process.env.NEXT_PUBLIC_IMAGE_URL || `${baseUrl}/images`;<br><br>  return {<br>    title: post.title,<br>    description: post.body,<br><br>    keywords: [<br>      ...post.title.split(\" \"),<br>      \"blog\",<br>      \"articles\",<br>      \"web development\",<br>      \"technology\",<br>    ],<br><br>    openGraph: {<br>      type: \"article\",<br>      url: `${baseUrl}/posts/${postId}`,<br>      title: post.title,<br>      description: post.body,<br>      images: [<br>        {<br>          url: `${imageUrl}/og-image-${postId}.png`,<br>          width: 1200,<br>          height: 630,<br>          alt: `Open Graph image for ${post.title}`,<br>        },<br>      ],<br>      siteName: \"My Awesome Blog\",<br>    },<br><br>    twitter: {<br>      card: \"summary_large_image\",<br>      site: \"@myawesomeblog\",<br>      title: post.title,<br>      description: post.body,<br>      images: [<br>        {<br>          url: `${imageUrl}/twitter-card-${postId}.jpg`,<br>          alt: `Twitter Card image for ${post.title}`,<br>        },<br>      ],<br>    },<br><br>    alternates: {<br>      canonical: `${baseUrl}/posts/${postId}`,<br>    },<br>  };<br>}</pre>\n<p>The post\u2019s title, description, images, and keywords are dynamically generated based on the content. Each piece of content receives uniquely tailored metadata.</p>\n<h3>Caching</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6Q-6MBpe0nxHfDFGaDyI5g.png\"><figcaption>Building nextjs project without generateStaticParams</figcaption></figure><p>Here, the dynamic content is rendered on demand using Node.js, and the page is generated on each request by fetching data directly from the API. This ensures the page always has the latest content, but it can cause a performance hit since the data must be fetched every time the API is\u00a0hit.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TDjFENxfTjaqPTnP32P2uA.png\"><figcaption>Building nextjs project with generateStaticParams</figcaption></figure><p>Here, the dynamic content is rendered statically at <strong>build time</strong> for each post using generateStaticParams. The static pages are pre-rendered and cached, improving performance. The pages can be <strong>incrementally re-generated</strong> when the content changes, ensuring that the latest content is served to users without rebuilding the entire\u00a0site.</p>\n<blockquote>When managing a website with <strong>thousands of blog posts</strong>, using <strong>generateStaticParams</strong> to pre-render every post can become inefficient. This approach increases <strong>build time</strong>, <strong>deployment size</strong>, and puts unnecessary load on both the <strong>server</strong> and <strong>CDN</strong>. To address this, we can selectively generate static pages for only the <strong>most popular</strong> or <strong>trending posts</strong>, while utilizing <strong>Incremental Static Regeneration (ISR)</strong> and <strong>Server-Side Rendering (SSR)</strong> for less frequently accessed\u00a0content.</blockquote>\n<blockquote>For posts that are less popular or frequently changing, use <strong>ISR</strong> to regenerate the page in the background when it\u2019s requested. This ensures content remains fresh without re-building the entire\u00a0site.</blockquote>\n<h3>404 Not Found\u00a0Page</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uLHt9od_Jizfb7s2zvbAcg.png\"><figcaption>Not Fount\u00a0page.</figcaption></figure><p>A well-designed 404 page can enhance SEO performance in the following ways:</p>\n<ul>\n<li>\n<strong>Improves user experience</strong>: Guides visitors back to valuable content, keeping them on the site\u00a0longer.</li>\n<li>\n<strong>Reduces bounce rates</strong>: Minimizes the chances of a \u201chard bounce,\u201d which can negatively affect SEO rankings.</li>\n<li>\n<strong>Signals site quality</strong>: Search engines may interpret a helpful 404 page as an indication of a well-maintained site.</li>\n<li>\n<strong>Boosts engagement</strong>: A 404 page with relevant links or a search bar helps users find what they\u2019re looking for, increasing user interaction.</li>\n</ul>\n<h3>Dynamic Sitemap</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7Z7AwzmGrjZZrsFG3qMZiw.png\"><figcaption>Dynamic sitemap code and sitemap.xml file</figcaption></figure><p>A sitemap.ts file helps search engines crawl and index the website more effectively, improving SEO performance.</p>\n<p><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap\">Nextjs Documentation</a></p>\n<p><strong>1. Efficient URL Discovery</strong></p>\n<p>A sitemap provides search engines with a comprehensive list of URLs on your site. By dynamically fetching content (such as blog posts or product pages) from an external source or database, the sitemap ensures that all relevant pages are discoverable by search\u00a0engines.</p>\n<p><strong>2. Updated Content\u00a0Indexing</strong></p>\n<p>Including the lastModified field for each URL in the sitemap allows search engines to know when content was last updated. This helps ensure that updated pages or newly added content are indexed promptly, improving their chances of appearing in search results\u00a0faster.</p>\n<p><strong>3. Comprehensive Site Structure</strong></p>\n<p>A well-structured sitemap includes all important pages, such as blog posts, category pages, and static pages (like \u201cAbout\u201d or \u201cContact\u201d). This comprehensive representation of the site structure gives search engines a clear map of how your content is organized, ensuring that no important page is overlooked.</p>\n<p><strong>4. Improved Crawl\u00a0Budget</strong></p>\n<p>Search engines use a <strong>\u201ccrawl budget\u201d</strong> which determines how often and how deeply they crawl the website. A well-structured and accurate sitemap helps search engines use their crawl budget efficiently, ensuring that high-priority pages are crawled more frequently and thoroughly.</p>\n<h3>Robots file</h3>\n<p><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots\">Nextjs Documentation</a></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*M0yEX-Swe9g706mqKioCGQ.png\"><figcaption>Robots.txt file.</figcaption></figure><p>The robots.txt file used for controlling how search engine crawlers access and index the\u00a0website.</p>\n<ul>\n<li>\n<strong>Control Crawling</strong>: Specifies which pages or sections of your site should not be crawled by search engine\u00a0bots.</li>\n<li>\n<strong>Prevent Indexing</strong>: Helps prevent search engines from indexing specific pages, such as admin pages or duplicate content.</li>\n<li>\n<strong>Improve Crawl Budget</strong>: Directs crawlers to focus on important pages, ensuring they efficiently use the crawl\u00a0budget.</li>\n<li>\n<strong>Avoid Overload</strong>: Prevents bots from overloading your server by restricting access to non-essential resources.</li>\n<li>\n<strong>Manage Subdirectories</strong>: Directs crawlers to avoid certain subdirectories, like staging or testing environments, to keep them from being\u00a0indexed.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f4714b267766\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["seo","search-engine-optimizati","google-analytics","ranking-on-google","nextjs"]},{"title":"Website Performance Optimization Strategies","pubDate":"2024-10-08 10:59:05","link":"https://augustinejoseph.medium.com/website-performance-optimization-strategies-30f7d20916eb?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/30f7d20916eb","author":"Augustine Joseph","thumbnail":"","description":"\n<p>Optimizing your website\u2019s performance is crucial for providing a better user experience, improving load times, and enhancing search engine rankings. Here are key strategies to consider:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/894/1*WuR1BFduGmYBixWJVSDrCQ.png\"></figure><h3>1. Go for Cloud\u00a0Hosting</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Cloud hosting distributes your website\u2019s resources across multiple servers, enhancing reliability and scalability.</li>\n<li>\n<strong>Scalability</strong>: Easily adjust resources based on traffic\u00a0spikes.</li>\n<li>\n<strong>Reliability</strong>: Reduced downtime due to server redundancy.</li>\n<li>\n<strong>Performance</strong>: Faster load times with resources located closer to\u00a0users.</li>\n</ul>\n<h3>2. Use a CDN\u00a0Service</h3>\n<ul>\n<li>\n<strong>Overview</strong>: A Content Delivery Network (CDN) caches your website\u2019s static assets on servers located worldwide.</li>\n<li>\n<strong>Reduced Latency</strong>: Users download content from the nearest server, speeding up load\u00a0times.</li>\n<li>\n<strong>Increased Availability</strong>: Improved resilience against traffic spikes or server failures.</li>\n<li>\n<strong>Enhanced Security</strong>: CDNs can offer DDoS protection and other security features.</li>\n</ul>\n<h3>3. Reduce Image\u00a0Size</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Large images can slow down your website significantly.</li>\n<li>\n<strong>Faster Load Times</strong>: Smaller images load quicker, improving user experience.</li>\n<li>\n<strong>Better Performance Scores</strong>: Image optimization contributes positively to web performance metrics.</li>\n<li>\n<strong>Methods</strong>:<br>- Use tools like TinyPNG or ImageOptim to compress images without noticeable quality loss.<br>- Utilize responsive images (e.g., srcset in HTML) to serve appropriately sized images based on the user's\u00a0device.</li>\n</ul>\n<h3>4. Minify HTML, CSS, and JavaScript Files</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Minification involves removing unnecessary characters from code files to reduce\u00a0size.</li>\n<li>\n<strong>Improved Load Times</strong>: Smaller files load faster, enhancing performance.</li>\n<li>\n<strong>Reduced Bandwidth Usage</strong>: Less data is transferred, which is beneficial for both users and hosting\u00a0costs.</li>\n<li>\n<strong>Tools</strong>: Use tools like UglifyJS for JavaScript, CSSNano for CSS, and HTMLMinifier for\u00a0HTML.</li>\n</ul>\n<h3>5. Make Your Website Mobile Responsive</h3>\n<ul>\n<li>\n<strong>Overview</strong>: A mobile-responsive design ensures that your website looks and functions well on various devices and screen\u00a0sizes.</li>\n<li>\n<strong>Improved User Experience</strong>: Users can easily navigate and interact with your site on any\u00a0device.</li>\n<li>\n<strong>SEO Benefits</strong>: Search engines favor mobile-friendly sites, potentially improving rankings.</li>\n<li>\n<strong>Methods</strong>:<br>- Use CSS media queries to adjust styles for different screen sizes.<br>- Implement a responsive framework like Bootstrap or Foundation.</li>\n</ul>\n<h3>6. Use of Web\u00a0Caching</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Web caching stores copies of files or pages to reduce load times for returning visitors.</li>\n<li>\n<strong>Faster Load Times</strong>: Users retrieve cached content quickly rather than requesting it from the\u00a0server.</li>\n<li>\n<strong>Reduced Server Load</strong>: Caching lessens the number of requests the server must\u00a0handle.</li>\n<li>\n<strong>Types of Caching</strong>:<br>- <strong>Browser Caching</strong>: Stores files in the user\u2019s browser for future visits.<br>- <strong>Server Caching</strong>: Uses server-side caching systems like Redis or\u00a0Varnish.</li>\n</ul>\n<h3>7. Reduce the Number of HTTP(S) Server Requests by Combining CSS &amp; JavaScript</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Reducing the number of individual requests made to the server by combining multiple CSS and JavaScript files into single\u00a0files.</li>\n<li>\n<strong>Fewer HTTP Requests</strong>: Reduces load time since fewer files need to be retrieved.</li>\n<li>\n<strong>Improved Performance</strong>: Less overhead in establishing multiple connections.</li>\n<li>\n<strong>Methods</strong>:<br>- Use build tools like Webpack or Gulp to concatenate and minify files automatically.<br>- Utilize CSS preprocessors like Sass or Less to combine stylesheets during the build\u00a0process.</li>\n</ul>\n<h3>8. Enable Compression</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Use gzip or Brotli compression to reduce the size of files sent from the server to the\u00a0client.</li>\n<li>\n<strong>Faster Load Times</strong>: Compressed files transfer more quickly over the\u00a0network.</li>\n<li>\n<strong>Reduced Bandwidth Usage</strong>: Decreases the amount of data transmitted, saving\u00a0costs.</li>\n<li>\n<strong>Implementation</strong>: Most web servers (like Apache and Nginx) support gzip compression. You can enable it through server configuration.</li>\n</ul>\n<h3>9. Optimize CSS\u00a0Delivery</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Ensure that CSS files load quickly and do not block rendering.</li>\n<li>\n<strong>Faster First Render</strong>: Critical CSS should be loaded inline or in the &lt;head&gt; to improve rendering speed.</li>\n<li>\n<strong>Methods</strong>:<br>- Use media attributes for non-critical styles to load them asynchronously.<br>- Split CSS into critical and non-critical styles.</li>\n</ul>\n<h3>10. Defer Non-Critical JavaScript</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Delay the loading of JavaScript that isn\u2019t essential for initial rendering.</li>\n<li>\n<strong>Improved Initial Load Time</strong>: Users can interact with the page before all scripts have\u00a0loaded.</li>\n<li>\n<strong>Implementation</strong>: Use the defer or async attributes in the &lt;script&gt; tag for non-critical JavaScript files.</li>\n</ul>\n<h3>11. Use Lazy Loading for Images and\u00a0Videos</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Load images and videos only when they are about to enter the viewport.</li>\n<li>\n<strong>Reduced Initial Load Time</strong>: Only essential content loads initially, speeding up the\u00a0page.</li>\n<li>\n<strong>Lower Bandwidth Usage</strong>: Non-visible media are not loaded until\u00a0needed.</li>\n<li>\n<strong>Implementation</strong>: Use the loading=\"lazy\" attribute in &lt;img&gt; tags or JavaScript libraries to implement lazy\u00a0loading.</li>\n</ul>\n<h3>12. Optimize Database\u00a0Queries</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Efficiently manage and optimize database queries to reduce response\u00a0time.</li>\n<li>\n<strong>Faster Data Retrieval</strong>: Well-structured queries return results\u00a0quicker.</li>\n<li>\n<strong>Methods</strong>:<br>- Use indexing to speed up query performance.<br>- Avoid SELECT *; instead, select only the necessary columns.</li>\n</ul>\n<h3>13. Reduce Redirects</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Minimize the use of URL redirects, which add additional HTTP requests and increase load\u00a0times.</li>\n<li>\n<strong>Faster Load Times</strong>: Fewer redirects mean less time spent on the\u00a0server.</li>\n<li>\n<strong>Methods</strong>:<br>- Review and eliminate unnecessary redirects.<br>- Use direct links whenever possible.</li>\n</ul>\n<h3>14. Optimize Web\u00a0Fonts</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Web fonts can slow down page loading if not handled properly.</li>\n<li>\n<strong>Faster Load Times</strong>: Efficient font loading leads to quicker rendering.</li>\n<li>\n<strong>Methods</strong>:<br>- Use font-display: swap; in your CSS to avoid blocking text rendering.<br>- Limit the number of font weights and styles\u00a0used.</li>\n</ul>\n<h3>15. Monitor Performance Regularly</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Continuously track website performance to identify areas for improvement.</li>\n<li>\n<strong>Proactive Issue Resolution</strong>: Regular monitoring helps catch performance bottlenecks early.</li>\n<li>\n<strong>Tools</strong>: Use tools like Google PageSpeed Insights, GTmetrix, or Lighthouse for analysis.</li>\n</ul>\n<h3>16. Use\u00a0HTTP/2</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Upgrade your server to support HTTP/2, which allows multiple requests to be sent at once over a single connection.</li>\n<li>\n<strong>Faster Loading</strong>: Improved multiplexing reduces\u00a0latency.</li>\n<li>\n<strong>Header Compression</strong>: Reduces the overhead of request and response\u00a0headers.</li>\n<li>\n<strong>Implementation</strong>: Check with your hosting provider to enable HTTP/2\u00a0support.</li>\n</ul>\n<h3>17. Optimize Server Response\u00a0Time</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Aim to reduce the time it takes for your server to respond to requests.</li>\n<li>\n<strong>Improved TTFB</strong>: A lower Time to First Byte enhances overall performance.</li>\n<li>\n<strong>Methods</strong>:<br>- Upgrade to a better hosting plan if necessary.<br>- Optimize server configurations and resources.</li>\n</ul>\n<h3>18. Use Asynchronous Loading for\u00a0CSS</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Load CSS files asynchronously to avoid blocking rendering.</li>\n<li>\n<strong>Faster First Paint</strong>: Users see content more quickly as CSS doesn\u2019t block rendering.</li>\n<li>\n<strong>Implementation</strong>: Use JavaScript or link tags with media=\"print\" to load stylesheets asynchronously.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=30f7d20916eb\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Optimizing your website\u2019s performance is crucial for providing a better user experience, improving load times, and enhancing search engine rankings. Here are key strategies to consider:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/894/1*WuR1BFduGmYBixWJVSDrCQ.png\"></figure><h3>1. Go for Cloud\u00a0Hosting</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Cloud hosting distributes your website\u2019s resources across multiple servers, enhancing reliability and scalability.</li>\n<li>\n<strong>Scalability</strong>: Easily adjust resources based on traffic\u00a0spikes.</li>\n<li>\n<strong>Reliability</strong>: Reduced downtime due to server redundancy.</li>\n<li>\n<strong>Performance</strong>: Faster load times with resources located closer to\u00a0users.</li>\n</ul>\n<h3>2. Use a CDN\u00a0Service</h3>\n<ul>\n<li>\n<strong>Overview</strong>: A Content Delivery Network (CDN) caches your website\u2019s static assets on servers located worldwide.</li>\n<li>\n<strong>Reduced Latency</strong>: Users download content from the nearest server, speeding up load\u00a0times.</li>\n<li>\n<strong>Increased Availability</strong>: Improved resilience against traffic spikes or server failures.</li>\n<li>\n<strong>Enhanced Security</strong>: CDNs can offer DDoS protection and other security features.</li>\n</ul>\n<h3>3. Reduce Image\u00a0Size</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Large images can slow down your website significantly.</li>\n<li>\n<strong>Faster Load Times</strong>: Smaller images load quicker, improving user experience.</li>\n<li>\n<strong>Better Performance Scores</strong>: Image optimization contributes positively to web performance metrics.</li>\n<li>\n<strong>Methods</strong>:<br>- Use tools like TinyPNG or ImageOptim to compress images without noticeable quality loss.<br>- Utilize responsive images (e.g., srcset in HTML) to serve appropriately sized images based on the user's\u00a0device.</li>\n</ul>\n<h3>4. Minify HTML, CSS, and JavaScript Files</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Minification involves removing unnecessary characters from code files to reduce\u00a0size.</li>\n<li>\n<strong>Improved Load Times</strong>: Smaller files load faster, enhancing performance.</li>\n<li>\n<strong>Reduced Bandwidth Usage</strong>: Less data is transferred, which is beneficial for both users and hosting\u00a0costs.</li>\n<li>\n<strong>Tools</strong>: Use tools like UglifyJS for JavaScript, CSSNano for CSS, and HTMLMinifier for\u00a0HTML.</li>\n</ul>\n<h3>5. Make Your Website Mobile Responsive</h3>\n<ul>\n<li>\n<strong>Overview</strong>: A mobile-responsive design ensures that your website looks and functions well on various devices and screen\u00a0sizes.</li>\n<li>\n<strong>Improved User Experience</strong>: Users can easily navigate and interact with your site on any\u00a0device.</li>\n<li>\n<strong>SEO Benefits</strong>: Search engines favor mobile-friendly sites, potentially improving rankings.</li>\n<li>\n<strong>Methods</strong>:<br>- Use CSS media queries to adjust styles for different screen sizes.<br>- Implement a responsive framework like Bootstrap or Foundation.</li>\n</ul>\n<h3>6. Use of Web\u00a0Caching</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Web caching stores copies of files or pages to reduce load times for returning visitors.</li>\n<li>\n<strong>Faster Load Times</strong>: Users retrieve cached content quickly rather than requesting it from the\u00a0server.</li>\n<li>\n<strong>Reduced Server Load</strong>: Caching lessens the number of requests the server must\u00a0handle.</li>\n<li>\n<strong>Types of Caching</strong>:<br>- <strong>Browser Caching</strong>: Stores files in the user\u2019s browser for future visits.<br>- <strong>Server Caching</strong>: Uses server-side caching systems like Redis or\u00a0Varnish.</li>\n</ul>\n<h3>7. Reduce the Number of HTTP(S) Server Requests by Combining CSS &amp; JavaScript</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Reducing the number of individual requests made to the server by combining multiple CSS and JavaScript files into single\u00a0files.</li>\n<li>\n<strong>Fewer HTTP Requests</strong>: Reduces load time since fewer files need to be retrieved.</li>\n<li>\n<strong>Improved Performance</strong>: Less overhead in establishing multiple connections.</li>\n<li>\n<strong>Methods</strong>:<br>- Use build tools like Webpack or Gulp to concatenate and minify files automatically.<br>- Utilize CSS preprocessors like Sass or Less to combine stylesheets during the build\u00a0process.</li>\n</ul>\n<h3>8. Enable Compression</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Use gzip or Brotli compression to reduce the size of files sent from the server to the\u00a0client.</li>\n<li>\n<strong>Faster Load Times</strong>: Compressed files transfer more quickly over the\u00a0network.</li>\n<li>\n<strong>Reduced Bandwidth Usage</strong>: Decreases the amount of data transmitted, saving\u00a0costs.</li>\n<li>\n<strong>Implementation</strong>: Most web servers (like Apache and Nginx) support gzip compression. You can enable it through server configuration.</li>\n</ul>\n<h3>9. Optimize CSS\u00a0Delivery</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Ensure that CSS files load quickly and do not block rendering.</li>\n<li>\n<strong>Faster First Render</strong>: Critical CSS should be loaded inline or in the &lt;head&gt; to improve rendering speed.</li>\n<li>\n<strong>Methods</strong>:<br>- Use media attributes for non-critical styles to load them asynchronously.<br>- Split CSS into critical and non-critical styles.</li>\n</ul>\n<h3>10. Defer Non-Critical JavaScript</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Delay the loading of JavaScript that isn\u2019t essential for initial rendering.</li>\n<li>\n<strong>Improved Initial Load Time</strong>: Users can interact with the page before all scripts have\u00a0loaded.</li>\n<li>\n<strong>Implementation</strong>: Use the defer or async attributes in the &lt;script&gt; tag for non-critical JavaScript files.</li>\n</ul>\n<h3>11. Use Lazy Loading for Images and\u00a0Videos</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Load images and videos only when they are about to enter the viewport.</li>\n<li>\n<strong>Reduced Initial Load Time</strong>: Only essential content loads initially, speeding up the\u00a0page.</li>\n<li>\n<strong>Lower Bandwidth Usage</strong>: Non-visible media are not loaded until\u00a0needed.</li>\n<li>\n<strong>Implementation</strong>: Use the loading=\"lazy\" attribute in &lt;img&gt; tags or JavaScript libraries to implement lazy\u00a0loading.</li>\n</ul>\n<h3>12. Optimize Database\u00a0Queries</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Efficiently manage and optimize database queries to reduce response\u00a0time.</li>\n<li>\n<strong>Faster Data Retrieval</strong>: Well-structured queries return results\u00a0quicker.</li>\n<li>\n<strong>Methods</strong>:<br>- Use indexing to speed up query performance.<br>- Avoid SELECT *; instead, select only the necessary columns.</li>\n</ul>\n<h3>13. Reduce Redirects</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Minimize the use of URL redirects, which add additional HTTP requests and increase load\u00a0times.</li>\n<li>\n<strong>Faster Load Times</strong>: Fewer redirects mean less time spent on the\u00a0server.</li>\n<li>\n<strong>Methods</strong>:<br>- Review and eliminate unnecessary redirects.<br>- Use direct links whenever possible.</li>\n</ul>\n<h3>14. Optimize Web\u00a0Fonts</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Web fonts can slow down page loading if not handled properly.</li>\n<li>\n<strong>Faster Load Times</strong>: Efficient font loading leads to quicker rendering.</li>\n<li>\n<strong>Methods</strong>:<br>- Use font-display: swap; in your CSS to avoid blocking text rendering.<br>- Limit the number of font weights and styles\u00a0used.</li>\n</ul>\n<h3>15. Monitor Performance Regularly</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Continuously track website performance to identify areas for improvement.</li>\n<li>\n<strong>Proactive Issue Resolution</strong>: Regular monitoring helps catch performance bottlenecks early.</li>\n<li>\n<strong>Tools</strong>: Use tools like Google PageSpeed Insights, GTmetrix, or Lighthouse for analysis.</li>\n</ul>\n<h3>16. Use\u00a0HTTP/2</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Upgrade your server to support HTTP/2, which allows multiple requests to be sent at once over a single connection.</li>\n<li>\n<strong>Faster Loading</strong>: Improved multiplexing reduces\u00a0latency.</li>\n<li>\n<strong>Header Compression</strong>: Reduces the overhead of request and response\u00a0headers.</li>\n<li>\n<strong>Implementation</strong>: Check with your hosting provider to enable HTTP/2\u00a0support.</li>\n</ul>\n<h3>17. Optimize Server Response\u00a0Time</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Aim to reduce the time it takes for your server to respond to requests.</li>\n<li>\n<strong>Improved TTFB</strong>: A lower Time to First Byte enhances overall performance.</li>\n<li>\n<strong>Methods</strong>:<br>- Upgrade to a better hosting plan if necessary.<br>- Optimize server configurations and resources.</li>\n</ul>\n<h3>18. Use Asynchronous Loading for\u00a0CSS</h3>\n<ul>\n<li>\n<strong>Overview</strong>: Load CSS files asynchronously to avoid blocking rendering.</li>\n<li>\n<strong>Faster First Paint</strong>: Users see content more quickly as CSS doesn\u2019t block rendering.</li>\n<li>\n<strong>Implementation</strong>: Use JavaScript or link tags with media=\"print\" to load stylesheets asynchronously.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=30f7d20916eb\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["hosting","caching","lazy-loading","http-request"]},{"title":"The Lifecycle of a Web Page Load: A Detailed Breakdown","pubDate":"2024-10-08 10:49:52","link":"https://augustinejoseph.medium.com/the-lifecycle-of-a-web-page-load-a-detailed-breakdown-035cc697a994?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/035cc697a994","author":"Augustine Joseph","thumbnail":"","description":"\n<p>Overview of each step in the webpage loading process, including more details about their significance, best practices for optimization, and how they relate to performance metrics.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/843/1*JymM3ngSKWTD3pJuXKPVuQ.png\"></figure><h4><strong>1. DNS\u00a0Lookup</strong></h4>\n<p>Translate domain name to IP\u00a0address.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Slow DNS lookups can delay page\u00a0loading.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use a fast and reliable DNS provider.<br>- Implement DNS prefetching for known\u00a0domains.</li>\n</ul>\n<h4><strong>2. Establishing a Connection</strong></h4>\n<p>Connect to the server via TCP and initiate SSL handshake (if\u00a0HTTPS).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Connection setup time affects overall load\u00a0time.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use HTTP/2 for multiplexing multiple requests over a single connection.<br>- Keep connections alive to reduce\u00a0latency.</li>\n</ul>\n<h4><strong>3. Sending the HTTP\u00a0Request</strong></h4>\n<p>Browser sends an HTTP request for the webpage and resources.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- This is when the browser requests the necessary resources to render the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Reduce the number of HTTP requests by combining files (e.g., CSS and JS).<br>- Use asynchronous loading for non-essential scripts.</li>\n</ul>\n<h4><strong>4. Server\u00a0Response</strong></h4>\n<p>Server processes the request and returns the HTML document.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Server performance and response time are critical for user experience.</li>\n<li>\n<strong>Optimization</strong>:<br>- Optimize server response time (use efficient server technologies).<br>- Implement server-side caching.</li>\n</ul>\n<h4><strong>5. First Byte Received\u00a0(TTFB)</strong></h4>\n<p>Measures the time taken from sending the request to receiving the first byte of data from the\u00a0server.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Indicates how quickly the server is responding.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use caching strategies to improve TTFB.<br>- Optimize backend processes and database\u00a0queries.</li>\n</ul>\n<h4><strong>6. HTML Parsing and DOM Construction</strong></h4>\n<p>Parse the HTML and build the Document Object Model\u00a0(DOM).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The DOM represents the structure of the\u00a0webpage.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize the size of HTML files.<br>- Ensure that the HTML is well-structured and\u00a0valid.</li>\n</ul>\n<h4><strong>7. Fetching Resources</strong></h4>\n<p>As the HTML is parsed, the browser identifies and requests additional resources referenced in the document, such as CSS, JavaScript files, and\u00a0images.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The order and method of loading these resources can affect rendering.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use &lt;link rel=\"preload\"&gt; for critical resources.<br>- Defer loading non-essential scripts until after the main content is\u00a0loaded.</li>\n</ul>\n<h4><strong>8. CSS Parsing and Render Tree Construction</strong></h4>\n<p>The browser parses the CSS stylesheets and combines them with the DOM to create the Render Tree, which defines the visual layout of the\u00a0page.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The Render Tree is used to paint the visual elements.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize CSS files and avoid excessive complexity.<br>- Use critical CSS to load only the necessary styles for above-the-fold content.</li>\n</ul>\n<h4><strong>9. Layout\u00a0(Reflow)</strong></h4>\n<p>The browser calculates the size and position of each element on the page based on the Render Tree. This step might need to be repeated (reflowed) if changes are made to the DOM or\u00a0CSS.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Changes in layout can trigger reflows, which are performance-intensive.</li>\n<li>\n<strong>Optimization</strong>:<br>- Avoid changing styles that cause reflows.<br>- Batch DOM updates to minimize layout thrashing.</li>\n</ul>\n<h4><strong>10. Painting</strong></h4>\n<p>The browser renders the visual elements onto the screen according to the Render\u00a0Tree.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- This is the visual representation of the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize the number of paint operations by optimizing the layout.<br>- Use CSS instead of images when possible for graphics.</li>\n</ul>\n<h4><strong>11. First Contentful Paint\u00a0(FCP)</strong></h4>\n<p>Measure the time for the first piece of content (text, image) to\u00a0appear.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A crucial metric for perceived loading\u00a0speed.</li>\n<li>\n<strong>Optimization</strong>:<br>- Optimize images and ensure quick-loading fonts.<br>- Prioritize above-the-fold content.</li>\n</ul>\n<h4><strong>12. JavaScript Execution</strong></h4>\n<p>JavaScript code (if any) is executed, potentially modifying the DOM or CSSOM (CSS Object Model), which can trigger further reflows or repaints.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- JS execution can block rendering if not handled correctly.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use async and defer attributes for script loading.<br>- Minify and bundle JavaScript files to reduce\u00a0size.</li>\n</ul>\n<h4><strong>13. Time to Interactive (TTI)</strong></h4>\n<p>Measures the time it takes for a page to become fully interactive, meaning all elements are ready to respond to user input (clicking, scrolling).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Indicates when users can start interacting with the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize JavaScript blocking during loading.<br>- Optimize event listeners to improve responsiveness.</li>\n</ul>\n<h4><strong>14. Largest Contentful Paint\u00a0(LCP)</strong></h4>\n<p>Measures the time taken for the largest visible content element to\u00a0load.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A key user experience metric for perceived speed.</li>\n<li>\n<strong>Optimization</strong>:<br>- Prioritize loading of large images and text blocks.<br>- Use lazy loading for off-screen images.</li>\n</ul>\n<h4><strong>15. Cumulative Layout Shift\u00a0(CLS)</strong></h4>\n<p>Track layout shifts during loading to ensure stability.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A high CLS score indicates a poor user experience.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use fixed dimensions for images and ads to prevent layout shifts.<br>- Avoid inserting content above existing\u00a0content.</li>\n</ul>\n<h4><strong>16. User Interaction</strong></h4>\n<p>The page is fully interactive, processing user actions (First Input Delay\u200a\u2014\u200aFID).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- User engagement depends on responsiveness.</li>\n<li>\n<strong>Optimization</strong>:<br>- Ensure quick response times to user inputs.<br>- Optimize event handling for better performance.</li>\n</ul>\n<h3>Key Metrics</h3>\n<ol>\n<li>\n<strong>Load Time</strong><br>The total time it takes for a webpage to fully load and display all its content.<br>Importance: Faster load times improve user experience and reduce bounce rates. Ideally, aim for under 2\u00a0seconds.</li>\n<li>\n<strong>Time to First Byte (TTFB)</strong><br>The duration from when a user requests a page to when the first byte of data is received by the browser.<br>Importance: Indicates server responsiveness. A lower TTFB means a faster response, crucial for overall page\u00a0speed.</li>\n<li>\n<strong>First Contentful Paint (FCP)</strong><br>The time taken for the first piece of content (like text or an image) to appear on the screen.<br>Importance: A key indicator of perceived load speed. Faster FCP means users see something quickly, improving their experience.</li>\n<li>\n<strong>Largest Contentful Paint (LCP)</strong><br>Measures the time it takes for the largest visible content element (like an image or large block of text) to load.<br>Importance: A critical metric for user experience. Ideally, LCP should be under 2.5\u00a0seconds.</li>\n<li>\n<strong>Time to Interactive (TTI)</strong><br>The time it takes for a page to become fully interactive, meaning all elements are ready to respond to user input.<br>Importance: A lower TTI ensures users can start interacting with the page\u00a0sooner.</li>\n<li>\n<strong>Cumulative Layout Shift (CLS)</strong><br>Measures the amount of unexpected layout shift during the page loading phase.<br>Importance: High CLS can frustrate users, especially if they click on something that shifts. Aim for a CLS score of less than\u00a00.1.</li>\n<li>\n<strong>Total Blocking Time (TBT)</strong><br>The total time between FCP and TTI during which the main thread is blocked and unable to respond to user input.<br>Importance: Lower TBT indicates a smoother user experience, as users can interact with the page\u00a0sooner.</li>\n<li>\n<strong>Speed Index</strong><br>A metric that reflects how quickly content is visually displayed during loading.<br>Importance: A lower Speed Index indicates that users see visual content sooner, enhancing their experience.</li>\n<li>\n<strong>First Input Delay (FID)</strong><br>Measures the time from when a user first interacts with a page (e.g., clicking a button) to when the browser responds.<br>Importance: Low FID indicates a more responsive page. Aim for under 100 milliseconds.</li>\n</ol>\n<h3>Tools for Measurement</h3>\n<ol>\n<li>\n<strong>Google PageSpeed Insights: <br></strong><a href=\"https://pagespeed.web.dev/\">https://pagespeed.web.dev/</a><strong> </strong><br>Analyzes the content of a web page and provides suggestions for improving speed. It gives scores for both mobile and desktop versions and highlights areas for improvement.</li>\n<li>\n<strong>Lighthouse: <br></strong><a href=\"https://developer.chrome.com/docs/lighthouse/overview\">https://developer.chrome.com/docs/lighthouse/overview</a><br>An open-source tool for auditing web pages. It assesses performance, accessibility, best practices, and SEO. It provides actionable insights for improvement.</li>\n<li>\n<strong>WebPageTest: <br></strong><a href=\"https://www.webpagetest.org/\">https://www.webpagetest.org/</a><br>Allows you to test the performance of a website from different locations and browsers. It provides detailed reports on various performance metrics, including visual snapshots.</li>\n<li>\n<strong>GTmetrix: <br></strong><a href=\"https://gtmetrix.com/\">https://gtmetrix.com/</a><br>Analyzes site speed and performance, offering insights and recommendations for optimization. It combines data from Google Lighthouse and WebPageTest.</li>\n</ol>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=035cc697a994\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Overview of each step in the webpage loading process, including more details about their significance, best practices for optimization, and how they relate to performance metrics.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/843/1*JymM3ngSKWTD3pJuXKPVuQ.png\"></figure><h4><strong>1. DNS\u00a0Lookup</strong></h4>\n<p>Translate domain name to IP\u00a0address.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Slow DNS lookups can delay page\u00a0loading.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use a fast and reliable DNS provider.<br>- Implement DNS prefetching for known\u00a0domains.</li>\n</ul>\n<h4><strong>2. Establishing a Connection</strong></h4>\n<p>Connect to the server via TCP and initiate SSL handshake (if\u00a0HTTPS).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Connection setup time affects overall load\u00a0time.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use HTTP/2 for multiplexing multiple requests over a single connection.<br>- Keep connections alive to reduce\u00a0latency.</li>\n</ul>\n<h4><strong>3. Sending the HTTP\u00a0Request</strong></h4>\n<p>Browser sends an HTTP request for the webpage and resources.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- This is when the browser requests the necessary resources to render the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Reduce the number of HTTP requests by combining files (e.g., CSS and JS).<br>- Use asynchronous loading for non-essential scripts.</li>\n</ul>\n<h4><strong>4. Server\u00a0Response</strong></h4>\n<p>Server processes the request and returns the HTML document.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Server performance and response time are critical for user experience.</li>\n<li>\n<strong>Optimization</strong>:<br>- Optimize server response time (use efficient server technologies).<br>- Implement server-side caching.</li>\n</ul>\n<h4><strong>5. First Byte Received\u00a0(TTFB)</strong></h4>\n<p>Measures the time taken from sending the request to receiving the first byte of data from the\u00a0server.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Indicates how quickly the server is responding.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use caching strategies to improve TTFB.<br>- Optimize backend processes and database\u00a0queries.</li>\n</ul>\n<h4><strong>6. HTML Parsing and DOM Construction</strong></h4>\n<p>Parse the HTML and build the Document Object Model\u00a0(DOM).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The DOM represents the structure of the\u00a0webpage.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize the size of HTML files.<br>- Ensure that the HTML is well-structured and\u00a0valid.</li>\n</ul>\n<h4><strong>7. Fetching Resources</strong></h4>\n<p>As the HTML is parsed, the browser identifies and requests additional resources referenced in the document, such as CSS, JavaScript files, and\u00a0images.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The order and method of loading these resources can affect rendering.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use &lt;link rel=\"preload\"&gt; for critical resources.<br>- Defer loading non-essential scripts until after the main content is\u00a0loaded.</li>\n</ul>\n<h4><strong>8. CSS Parsing and Render Tree Construction</strong></h4>\n<p>The browser parses the CSS stylesheets and combines them with the DOM to create the Render Tree, which defines the visual layout of the\u00a0page.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- The Render Tree is used to paint the visual elements.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize CSS files and avoid excessive complexity.<br>- Use critical CSS to load only the necessary styles for above-the-fold content.</li>\n</ul>\n<h4><strong>9. Layout\u00a0(Reflow)</strong></h4>\n<p>The browser calculates the size and position of each element on the page based on the Render Tree. This step might need to be repeated (reflowed) if changes are made to the DOM or\u00a0CSS.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Changes in layout can trigger reflows, which are performance-intensive.</li>\n<li>\n<strong>Optimization</strong>:<br>- Avoid changing styles that cause reflows.<br>- Batch DOM updates to minimize layout thrashing.</li>\n</ul>\n<h4><strong>10. Painting</strong></h4>\n<p>The browser renders the visual elements onto the screen according to the Render\u00a0Tree.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- This is the visual representation of the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize the number of paint operations by optimizing the layout.<br>- Use CSS instead of images when possible for graphics.</li>\n</ul>\n<h4><strong>11. First Contentful Paint\u00a0(FCP)</strong></h4>\n<p>Measure the time for the first piece of content (text, image) to\u00a0appear.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A crucial metric for perceived loading\u00a0speed.</li>\n<li>\n<strong>Optimization</strong>:<br>- Optimize images and ensure quick-loading fonts.<br>- Prioritize above-the-fold content.</li>\n</ul>\n<h4><strong>12. JavaScript Execution</strong></h4>\n<p>JavaScript code (if any) is executed, potentially modifying the DOM or CSSOM (CSS Object Model), which can trigger further reflows or repaints.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- JS execution can block rendering if not handled correctly.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use async and defer attributes for script loading.<br>- Minify and bundle JavaScript files to reduce\u00a0size.</li>\n</ul>\n<h4><strong>13. Time to Interactive (TTI)</strong></h4>\n<p>Measures the time it takes for a page to become fully interactive, meaning all elements are ready to respond to user input (clicking, scrolling).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- Indicates when users can start interacting with the\u00a0page.</li>\n<li>\n<strong>Optimization</strong>:<br>- Minimize JavaScript blocking during loading.<br>- Optimize event listeners to improve responsiveness.</li>\n</ul>\n<h4><strong>14. Largest Contentful Paint\u00a0(LCP)</strong></h4>\n<p>Measures the time taken for the largest visible content element to\u00a0load.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A key user experience metric for perceived speed.</li>\n<li>\n<strong>Optimization</strong>:<br>- Prioritize loading of large images and text blocks.<br>- Use lazy loading for off-screen images.</li>\n</ul>\n<h4><strong>15. Cumulative Layout Shift\u00a0(CLS)</strong></h4>\n<p>Track layout shifts during loading to ensure stability.</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- A high CLS score indicates a poor user experience.</li>\n<li>\n<strong>Optimization</strong>:<br>- Use fixed dimensions for images and ads to prevent layout shifts.<br>- Avoid inserting content above existing\u00a0content.</li>\n</ul>\n<h4><strong>16. User Interaction</strong></h4>\n<p>The page is fully interactive, processing user actions (First Input Delay\u200a\u2014\u200aFID).</p>\n<ul>\n<li>\n<strong>Significance</strong>: <br>- User engagement depends on responsiveness.</li>\n<li>\n<strong>Optimization</strong>:<br>- Ensure quick response times to user inputs.<br>- Optimize event handling for better performance.</li>\n</ul>\n<h3>Key Metrics</h3>\n<ol>\n<li>\n<strong>Load Time</strong><br>The total time it takes for a webpage to fully load and display all its content.<br>Importance: Faster load times improve user experience and reduce bounce rates. Ideally, aim for under 2\u00a0seconds.</li>\n<li>\n<strong>Time to First Byte (TTFB)</strong><br>The duration from when a user requests a page to when the first byte of data is received by the browser.<br>Importance: Indicates server responsiveness. A lower TTFB means a faster response, crucial for overall page\u00a0speed.</li>\n<li>\n<strong>First Contentful Paint (FCP)</strong><br>The time taken for the first piece of content (like text or an image) to appear on the screen.<br>Importance: A key indicator of perceived load speed. Faster FCP means users see something quickly, improving their experience.</li>\n<li>\n<strong>Largest Contentful Paint (LCP)</strong><br>Measures the time it takes for the largest visible content element (like an image or large block of text) to load.<br>Importance: A critical metric for user experience. Ideally, LCP should be under 2.5\u00a0seconds.</li>\n<li>\n<strong>Time to Interactive (TTI)</strong><br>The time it takes for a page to become fully interactive, meaning all elements are ready to respond to user input.<br>Importance: A lower TTI ensures users can start interacting with the page\u00a0sooner.</li>\n<li>\n<strong>Cumulative Layout Shift (CLS)</strong><br>Measures the amount of unexpected layout shift during the page loading phase.<br>Importance: High CLS can frustrate users, especially if they click on something that shifts. Aim for a CLS score of less than\u00a00.1.</li>\n<li>\n<strong>Total Blocking Time (TBT)</strong><br>The total time between FCP and TTI during which the main thread is blocked and unable to respond to user input.<br>Importance: Lower TBT indicates a smoother user experience, as users can interact with the page\u00a0sooner.</li>\n<li>\n<strong>Speed Index</strong><br>A metric that reflects how quickly content is visually displayed during loading.<br>Importance: A lower Speed Index indicates that users see visual content sooner, enhancing their experience.</li>\n<li>\n<strong>First Input Delay (FID)</strong><br>Measures the time from when a user first interacts with a page (e.g., clicking a button) to when the browser responds.<br>Importance: Low FID indicates a more responsive page. Aim for under 100 milliseconds.</li>\n</ol>\n<h3>Tools for Measurement</h3>\n<ol>\n<li>\n<strong>Google PageSpeed Insights: <br></strong><a href=\"https://pagespeed.web.dev/\">https://pagespeed.web.dev/</a><strong> </strong><br>Analyzes the content of a web page and provides suggestions for improving speed. It gives scores for both mobile and desktop versions and highlights areas for improvement.</li>\n<li>\n<strong>Lighthouse: <br></strong><a href=\"https://developer.chrome.com/docs/lighthouse/overview\">https://developer.chrome.com/docs/lighthouse/overview</a><br>An open-source tool for auditing web pages. It assesses performance, accessibility, best practices, and SEO. It provides actionable insights for improvement.</li>\n<li>\n<strong>WebPageTest: <br></strong><a href=\"https://www.webpagetest.org/\">https://www.webpagetest.org/</a><br>Allows you to test the performance of a website from different locations and browsers. It provides detailed reports on various performance metrics, including visual snapshots.</li>\n<li>\n<strong>GTmetrix: <br></strong><a href=\"https://gtmetrix.com/\">https://gtmetrix.com/</a><br>Analyzes site speed and performance, offering insights and recommendations for optimization. It combines data from Google Lighthouse and WebPageTest.</li>\n</ol>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=035cc697a994\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["seo","web-development","optimization","lighthouse"]},{"title":"Queue Data Structure","pubDate":"2024-06-19 09:41:58","link":"https://augustinejoseph.medium.com/queue-data-structure-f97e0c578b61?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/f97e0c578b61","author":"Augustine Joseph","thumbnail":"","description":"\n<p>A queue is a linear data structure that follows the <strong>FIFO (First In, First Out)</strong> principle, where the element that is inserted first will be the one to be removed first. This makes queues similar to real-world queues like waiting in line at a ticket counter or a restaurant.</p>\n<p>A queue is an Abstract Data Type (ADT) similar to stack, the thing that makes queue different from stack is that a <strong>queue is open at both its ends.</strong> The data is inserted into the queue through one end and deleted from it using the other\u00a0end.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uWCfkBtP5T3y4jMKalfDDg.png\"><figcaption>Queue</figcaption></figure><h3>Applications of Queues in Real-World Scenarios</h3>\n<p>Queues are widely used in various real-world scenarios due to their FIFO nature and efficiency in managing data\u00a0access:</p>\n<ol>\n<li>\n<strong>Job Scheduling</strong>: Operating systems often use queues to manage processes in a round-robin manner or based on priority levels. Jobs are added to a queue and processed according to their arrival time or priority.</li>\n<li>\n<strong>Breadth-First Search (BFS)</strong>: Queues are essential in graph traversal algorithms like BFS, where nodes are processed layer by layer. In BFS, the nodes are explored in the order of their depth levels, using a queue to keep track of the current frontier of exploration.</li>\n<li>\n<strong>Printer Queue</strong>: Print jobs sent to a printer are typically managed using a queue. The jobs are printed in the order they are received, ensuring fairness (FIFO) in processing print requests.</li>\n<li>\n<strong>Call Center Systems</strong>: In call centers, customer service requests are often managed using queues. Calls are answered in the order they are received, ensuring that customers are served\u00a0fairly.</li>\n</ol>\n<h3>Basic Operations of\u00a0Queue</h3>\n<ul>\n<li>\n<strong>Enqueue</strong>: Add an element to the end of the\u00a0queue</li>\n<li>\n<strong>Dequeue</strong>: Remove an element from the front of the\u00a0queue</li>\n<li>\n<strong>IsEmpty</strong>: Check if the queue is\u00a0empty</li>\n<li>\n<strong>IsFull</strong>: Check if the queue is\u00a0full</li>\n<li>\n<strong>Peek</strong>: Get the value of the front of the queue without removing\u00a0it</li>\n</ul>\n<h3>Types of\u00a0Queue</h3>\n<ol><li>\n<strong>Linear Queue</strong>:</li></ol>\n<ul>\n<li>Follows FIFO (First In, First Out) principle.</li>\n<li>Operations: enqueue() to add elements to the rear and dequeue() to remove elements from the\u00a0front.</li>\n<li>Implemented using arrays or linked\u00a0lists.</li>\n<li>Simple and straightforward structure.</li>\n</ul>\n<p><strong>2. Circular\u00a0Queue</strong>:</p>\n<ul>\n<li>Overcomes the limitation of linear queues where space at the beginning can\u2019t be\u00a0reused.</li>\n<li>Here the last member is linked to the first, forming a circle-like structure.</li>\n<li>Uses a circular array where the rear and front pointers wrap\u00a0around.</li>\n<li>Efficient use of space and avoids\u00a0wastage.</li>\n<li>Operations include enqueue() and dequeue() with special handling of pointers.</li>\n</ul>\n<p><strong>3. Priority\u00a0Queue</strong>:</p>\n<ul>\n<li>Each element has a priority associated with\u00a0it.</li>\n<li>Elements are dequeued based on their priority, not the order of insertion.</li>\n<li>Implemented using binary heaps, arrays, linked lists, or other priority-based data structures.</li>\n<li>Useful in scenarios requiring processing based on urgency or importance.</li>\n</ul>\n<p><strong>4. Double-Ended Queue\u00a0(Deque)</strong>:</p>\n<ul>\n<li>Supports insertion and deletion from both ends of the\u00a0queue.</li>\n<li>Can function as a queue (FIFO) or a stack (LIFO) depending on the operation.</li>\n<li>Provides more flexibility than standard queues for certain applications.</li>\n<li>Operations: addFront(), removeFront(), addRear(), removeRear().</li>\n</ul>\n<p><strong>5. Deque with Priority</strong>:</p>\n<ul>\n<li>Combination of a deque and priority\u00a0queue.</li>\n<li>Each element has a priority associated with its position in the\u00a0deque.</li>\n<li>Operations are performed considering both position and priority.</li>\n<li>Useful for managing tasks or events with varying priorities.</li>\n</ul>\n<p><strong>6. Bounded\u00a0Queue</strong>:</p>\n<ul>\n<li>Has a fixed maximum capacity.</li>\n<li>Once capacity is reached, further enqueue operations are blocked until space is available (or elements are dequeued).</li>\n<li>Ensures memory management and prevents overflow.</li>\n<li>Commonly used in resource-constrained environments or for controlled data buffering.</li>\n</ul>\n<p><strong>7. Blocking\u00a0Queue</strong>:</p>\n<ul>\n<li>Supports blocking operations when attempting to dequeue from an empty queue or enqueue to a full\u00a0queue.</li>\n<li>Ensures synchronization in concurrent programming.</li>\n<li>Useful in multithreaded environments to manage data flow between producer and consumer\u00a0threads.</li>\n<li>Operations may block until conditions (like availability of space or elements) are\u00a0met.</li>\n</ul>\n<p><strong>8. Priority Blocking\u00a0Queue</strong>:</p>\n<ul>\n<li>Combines the features of a priority queue and a blocking\u00a0queue.</li>\n<li>Elements are enqueued with priorities and dequeued according to their priority\u00a0levels.</li>\n<li>Provides synchronization and priority-based processing capabilities.</li>\n<li>Ensures efficient handling of tasks or events with varying levels of importance or urgency in concurrent environments.</li>\n</ul>\n<h3>Time Complexity of Queue Operation</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YKR8UNV80wmv8D2OnCbJyw.png\"><figcaption>Time complexity of various queue operations</figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f97e0c578b61\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>A queue is a linear data structure that follows the <strong>FIFO (First In, First Out)</strong> principle, where the element that is inserted first will be the one to be removed first. This makes queues similar to real-world queues like waiting in line at a ticket counter or a restaurant.</p>\n<p>A queue is an Abstract Data Type (ADT) similar to stack, the thing that makes queue different from stack is that a <strong>queue is open at both its ends.</strong> The data is inserted into the queue through one end and deleted from it using the other\u00a0end.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uWCfkBtP5T3y4jMKalfDDg.png\"><figcaption>Queue</figcaption></figure><h3>Applications of Queues in Real-World Scenarios</h3>\n<p>Queues are widely used in various real-world scenarios due to their FIFO nature and efficiency in managing data\u00a0access:</p>\n<ol>\n<li>\n<strong>Job Scheduling</strong>: Operating systems often use queues to manage processes in a round-robin manner or based on priority levels. Jobs are added to a queue and processed according to their arrival time or priority.</li>\n<li>\n<strong>Breadth-First Search (BFS)</strong>: Queues are essential in graph traversal algorithms like BFS, where nodes are processed layer by layer. In BFS, the nodes are explored in the order of their depth levels, using a queue to keep track of the current frontier of exploration.</li>\n<li>\n<strong>Printer Queue</strong>: Print jobs sent to a printer are typically managed using a queue. The jobs are printed in the order they are received, ensuring fairness (FIFO) in processing print requests.</li>\n<li>\n<strong>Call Center Systems</strong>: In call centers, customer service requests are often managed using queues. Calls are answered in the order they are received, ensuring that customers are served\u00a0fairly.</li>\n</ol>\n<h3>Basic Operations of\u00a0Queue</h3>\n<ul>\n<li>\n<strong>Enqueue</strong>: Add an element to the end of the\u00a0queue</li>\n<li>\n<strong>Dequeue</strong>: Remove an element from the front of the\u00a0queue</li>\n<li>\n<strong>IsEmpty</strong>: Check if the queue is\u00a0empty</li>\n<li>\n<strong>IsFull</strong>: Check if the queue is\u00a0full</li>\n<li>\n<strong>Peek</strong>: Get the value of the front of the queue without removing\u00a0it</li>\n</ul>\n<h3>Types of\u00a0Queue</h3>\n<ol><li>\n<strong>Linear Queue</strong>:</li></ol>\n<ul>\n<li>Follows FIFO (First In, First Out) principle.</li>\n<li>Operations: enqueue() to add elements to the rear and dequeue() to remove elements from the\u00a0front.</li>\n<li>Implemented using arrays or linked\u00a0lists.</li>\n<li>Simple and straightforward structure.</li>\n</ul>\n<p><strong>2. Circular\u00a0Queue</strong>:</p>\n<ul>\n<li>Overcomes the limitation of linear queues where space at the beginning can\u2019t be\u00a0reused.</li>\n<li>Here the last member is linked to the first, forming a circle-like structure.</li>\n<li>Uses a circular array where the rear and front pointers wrap\u00a0around.</li>\n<li>Efficient use of space and avoids\u00a0wastage.</li>\n<li>Operations include enqueue() and dequeue() with special handling of pointers.</li>\n</ul>\n<p><strong>3. Priority\u00a0Queue</strong>:</p>\n<ul>\n<li>Each element has a priority associated with\u00a0it.</li>\n<li>Elements are dequeued based on their priority, not the order of insertion.</li>\n<li>Implemented using binary heaps, arrays, linked lists, or other priority-based data structures.</li>\n<li>Useful in scenarios requiring processing based on urgency or importance.</li>\n</ul>\n<p><strong>4. Double-Ended Queue\u00a0(Deque)</strong>:</p>\n<ul>\n<li>Supports insertion and deletion from both ends of the\u00a0queue.</li>\n<li>Can function as a queue (FIFO) or a stack (LIFO) depending on the operation.</li>\n<li>Provides more flexibility than standard queues for certain applications.</li>\n<li>Operations: addFront(), removeFront(), addRear(), removeRear().</li>\n</ul>\n<p><strong>5. Deque with Priority</strong>:</p>\n<ul>\n<li>Combination of a deque and priority\u00a0queue.</li>\n<li>Each element has a priority associated with its position in the\u00a0deque.</li>\n<li>Operations are performed considering both position and priority.</li>\n<li>Useful for managing tasks or events with varying priorities.</li>\n</ul>\n<p><strong>6. Bounded\u00a0Queue</strong>:</p>\n<ul>\n<li>Has a fixed maximum capacity.</li>\n<li>Once capacity is reached, further enqueue operations are blocked until space is available (or elements are dequeued).</li>\n<li>Ensures memory management and prevents overflow.</li>\n<li>Commonly used in resource-constrained environments or for controlled data buffering.</li>\n</ul>\n<p><strong>7. Blocking\u00a0Queue</strong>:</p>\n<ul>\n<li>Supports blocking operations when attempting to dequeue from an empty queue or enqueue to a full\u00a0queue.</li>\n<li>Ensures synchronization in concurrent programming.</li>\n<li>Useful in multithreaded environments to manage data flow between producer and consumer\u00a0threads.</li>\n<li>Operations may block until conditions (like availability of space or elements) are\u00a0met.</li>\n</ul>\n<p><strong>8. Priority Blocking\u00a0Queue</strong>:</p>\n<ul>\n<li>Combines the features of a priority queue and a blocking\u00a0queue.</li>\n<li>Elements are enqueued with priorities and dequeued according to their priority\u00a0levels.</li>\n<li>Provides synchronization and priority-based processing capabilities.</li>\n<li>Ensures efficient handling of tasks or events with varying levels of importance or urgency in concurrent environments.</li>\n</ul>\n<h3>Time Complexity of Queue Operation</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YKR8UNV80wmv8D2OnCbJyw.png\"><figcaption>Time complexity of various queue operations</figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f97e0c578b61\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["fifo","queue","optimization","algorithms","data-structures"]},{"title":"Hashing Algorithms and Collision Management","pubDate":"2024-06-19 04:09:49","link":"https://augustinejoseph.medium.com/hashing-algorithms-and-collision-management-ff1d242b050b?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/ff1d242b050b","author":"Augustine Joseph","thumbnail":"","description":"\n<p>A hash function is a mathematical function that takes an input (or \u2018message\u2019) and returns a fixed-size string of\u00a0bytes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vBBvqtbFzZhXVgpXghF9AA.png\"></figure><h3>Need for Hash data structure:</h3>\n<ul>\n<li>The amount of data we deal with is constantly increasing, both on the internet and in everyday programming tasks.</li>\n<li>Arrays are a common data structure for storing information. They excel at adding data quickly (in constant time, O(1)). However, searching for specific data within an array can be slow (at least O(log n)\u00a0time).</li>\n<li>This is where hash tables come in. They are a specialized data structure designed for lightning-fast lookups.</li>\n<li>Unlike arrays, hash tables prioritize retrieval speed over insertion speed.</li>\n<li>Hash tables achieve this through a technique called hashing, where data is mapped to a unique location based on a key (like a\u00a0name).</li>\n<li>This allows for near-instantaneous lookups, making them ideal for scenarios where finding specific data is essential, like checking usernames or retrieving shopping cart\u00a0items.</li>\n</ul>\n<h3>Components of\u00a0Hashing:</h3>\n<p>Hashing utilizes three core components to achieve efficient data storage and retrieval:</p>\n<ol>\n<li>\n<strong>Key:</strong> This acts as a unique identifier for the data element. It can be a string, integer, or any data type that can be consistently hashed. The key serves as the input for the hash function.</li>\n<li>\n<strong>Hash Function:</strong> This is a special algorithm that transforms the key into a fixed-size integer value, known as the hash index. Ideally, the hash function should distribute keys uniformly across the available slots in the hash table to minimize collisions.</li>\n<li>\n<strong>Hash Table:</strong> This is a data structure designed for fast access using keys. It\u2019s essentially an array with each slot potentially holding a key-value pair. The hash index generated by the hash function determines the specific slot where the corresponding data element is stored or retrieved within the hash\u00a0table.</li>\n</ol>\n<h3>Key Features of a Hash Function:</h3>\n<ul>\n<li>\n<strong>Collision resistance: </strong>It should be highly unlikely to get the same output for two different inputs.</li>\n<li>\n<strong>Preimage resistance:</strong> It should be computationally infeasible to find the input that matches a given hash function.</li>\n<li>\n<strong>Deterministic: </strong>The same input should always produce the same hash\u00a0result.</li>\n<li>\n<strong>Avalanche effect: </strong>A small change in the input should result in a completely different hash\u00a0value.</li>\n<li>\n<strong>Hidden:</strong> It should be difficult to guess the input from the\u00a0output.</li>\n<li>\n<strong>Puzzle-friendly: </strong>It should be difficult to choose an input that produces a specific\u00a0output.</li>\n<li>\n<strong>Quick Computation</strong>: The hash value should be computationally efficient to compute for any input\u00a0size.</li>\n</ul>\n<h3>Types of Hashing Algorithms</h3>\n<p><strong>MD5 (Message Digest Algorithm 5):</strong></p>\n<ul>\n<li>Developed by Ronald Rivest in\u00a01991.</li>\n<li>Produces a 128-bit (16-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Vulnerable to collision attacks; considered cryptographically broken and unsuitable for further use in security applications.</li>\n</ul>\n<p><strong>SHA-1 (Secure Hash Algorithm 1):</strong></p>\n<ul>\n<li>Developed by the NSA and published by NIST in\u00a01993.</li>\n<li>Produces a 160-bit (20-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Vulnerable to collision attacks; deprecated for most cryptographic uses.</li>\n</ul>\n<p><strong>SHA-256 (Secure Hash Algorithm 256):</strong></p>\n<ul>\n<li>Part of the SHA-2 family, developed by the NSA and published by NIST in\u00a02001.</li>\n<li>Produces a 256-bit (32-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Currently considered secure and widely used in various security applications.</li>\n</ul>\n<h3><strong>Cryptographic vs Non-Cryptographic Hash Functions</strong></h3>\n<ul>\n<li>The distinction between cryptographic and non-cryptographic hash functions lies primarily in their <strong>design goals and properties.</strong>\n</li>\n<li>\n<strong>Cryptographic hash functions </strong>prioritize security guarantees such as resistance to pre-image attacks and collision attacks, making them suitable for cryptographic protocols and applications where data integrity and authenticity are paramount. <br>Eg\u00a0: Digital Signatures, Data Integrity and Password\u00a0Hashing.</li>\n<li>\n<strong>Non-cryptographic hash functions,</strong> on the other hand, focus on speed and efficiency, catering to applications where security requirements are less stringent and performance is critical.<br>Eg\u00a0: Hash Tables, Checksums, Data Structures</li>\n</ul>\n<h3>Hash Collisions</h3>\n<ul>\n<li>In hashing, collisions occur when two distinct keys map to the same hash value within the hash\u00a0table.</li>\n<li>We have a hash table with a capacity of 4 entries (slots 0\u20133). This means it can hold a maximum of 4 key-value pairs.</li>\n<li>We use a basic hash function that takes the key modulo (remainder after division) by the table capacity (4). This is denoted as key %\u00a04.</li>\n</ul>\n<p><strong>Keys and\u00a0Hashes:</strong></p>\n<ul>\n<li>Key: \u201cuser123\u201d (hash value: \u201cuser123\u201d % 4 =\u00a03)</li>\n<li>Key: \u201cadmin\u201d (hash value: \u201cadmin\u201d % 4 =\u00a03)</li>\n</ul>\n<p>Both \u201cuser123\u201d and \u201cadmin\u201d map to the same hash index (3) due to the limited addressing space (4 slots) and the compression by the hash function (mod 4). This creates a collision.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*59WuBBLfHKTZQ5LhCdbgKA.png\"><figcaption>Hash collision</figcaption></figure><h3>Handling the collision</h3>\n<p><strong>1. Separate Chaining:</strong></p>\n<ul>\n<li>Imagine each slot in the hash table can hold a linked\u00a0list.</li>\n<li>When a collision occurs (like with \u201cuser123\u201d and \u201cadmin\u201d in your example), both keys are added to the same linked list attached to the slot with the colliding hash value (slot 3 in this\u00a0case).</li>\n<li>This creates a separate chain of elements that share the same hash\u00a0index.</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6lWBE_w1jR_b3EAO6V8lXQ.png\"><figcaption>Seperate Chaining</figcaption></figure><p><strong>Benefits:</strong></p>\n<ul>\n<li>Simple to implement.</li>\n<li>Works well for a moderate number of collisions.</li>\n</ul>\n<p><strong>Drawbacks:</strong></p>\n<ul><li>In the worst case, if many keys collide and end up in the same linked list, searching for a specific key can become slow as you need to traverse the entire\u00a0list.</li></ul>\n<p><strong>2. Linear\u00a0Probing:</strong></p>\n<ul>\n<li>This approach attempts to insert the key in the next available slot after the initial collision point.</li>\n<li>In your example, with \u201cuser123\u201d and \u201cadmin\u201d colliding at slot 3, linear probing would check slot 4(since it\u2019s the next available slot).</li>\n<li>If slot 4 is empty, \u201cadmin\u201d would be placed there.(depending on the table\u2019s fill pattern).</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tmUeD2ELG3KxKaCPVjimRw.png\"></figure><p><strong>Benefits:</strong></p>\n<ul>\n<li>No need for additional data structures like linked\u00a0lists.</li>\n<li>Can be faster than separate chaining for a small number of collisions.</li>\n</ul>\n<p><strong>Drawbacks:</strong></p>\n<ul><li>In the worst case, if the table is nearly full, linear probing might keep searching for empty slots, causing a performance issue known as clustering.</li></ul>\n<h3>Strategies for Hash Collision Prevention</h3>\n<p>While collisions are unavoidable, there are techniques to minimize their occurrence and maintain the effectiveness of your hash\u00a0table.</p>\n<p><strong>1. Using Strong Hash Functions:</strong></p>\n<ul>\n<li>The first line of defense is choosing a well-established and cryptographically secure hash function. These functions are designed to distribute keys uniformly across the hash table space, reducing the likelihood of collisions.</li>\n<li>Common examples include SHA-256 and\u00a0SHA-3.</li>\n</ul>\n<p><strong>2. Increasing Hash Table\u00a0Size:</strong></p>\n<ul>\n<li>A larger hash table offers more space for keys to be distributed, reducing the probability of collisions occurring.</li>\n<li>However, this comes with the trade-off of increased memory\u00a0usage.</li>\n</ul>\n<p><strong>3. Salting:</strong></p>\n<ul>\n<li>When hashing passwords or other sensitive data, adding a random string (salt) before hashing significantly reduces the chance of collisions.</li>\n<li>Even if two passwords collide after salting, the attacker would need to find a collision for the specific salt used, making it much more difficult to crack passwords.</li>\n</ul>\n<p><strong>4. Choosing Appropriate Hash Function Parameters:</strong></p>\n<ul><li>Some hash functions allow for configurable parameters that influence the output size and collision resistance. Choosing the right parameters ensures a balance between security and performance. For example, a larger hash value generally offers better collision resistance but requires more storage\u00a0space.</li></ul>\n<p><strong>5. Load\u00a0Factor:</strong></p>\n<ul>\n<li>The load factor represents the percentage of slots in the hash table that are filled. Maintaining a moderate load factor (around 50%) helps to keep collisions at\u00a0control.</li>\n<li>If the load factor becomes too high, consider increasing the hash table\u00a0size.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ff1d242b050b\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>A hash function is a mathematical function that takes an input (or \u2018message\u2019) and returns a fixed-size string of\u00a0bytes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vBBvqtbFzZhXVgpXghF9AA.png\"></figure><h3>Need for Hash data structure:</h3>\n<ul>\n<li>The amount of data we deal with is constantly increasing, both on the internet and in everyday programming tasks.</li>\n<li>Arrays are a common data structure for storing information. They excel at adding data quickly (in constant time, O(1)). However, searching for specific data within an array can be slow (at least O(log n)\u00a0time).</li>\n<li>This is where hash tables come in. They are a specialized data structure designed for lightning-fast lookups.</li>\n<li>Unlike arrays, hash tables prioritize retrieval speed over insertion speed.</li>\n<li>Hash tables achieve this through a technique called hashing, where data is mapped to a unique location based on a key (like a\u00a0name).</li>\n<li>This allows for near-instantaneous lookups, making them ideal for scenarios where finding specific data is essential, like checking usernames or retrieving shopping cart\u00a0items.</li>\n</ul>\n<h3>Components of\u00a0Hashing:</h3>\n<p>Hashing utilizes three core components to achieve efficient data storage and retrieval:</p>\n<ol>\n<li>\n<strong>Key:</strong> This acts as a unique identifier for the data element. It can be a string, integer, or any data type that can be consistently hashed. The key serves as the input for the hash function.</li>\n<li>\n<strong>Hash Function:</strong> This is a special algorithm that transforms the key into a fixed-size integer value, known as the hash index. Ideally, the hash function should distribute keys uniformly across the available slots in the hash table to minimize collisions.</li>\n<li>\n<strong>Hash Table:</strong> This is a data structure designed for fast access using keys. It\u2019s essentially an array with each slot potentially holding a key-value pair. The hash index generated by the hash function determines the specific slot where the corresponding data element is stored or retrieved within the hash\u00a0table.</li>\n</ol>\n<h3>Key Features of a Hash Function:</h3>\n<ul>\n<li>\n<strong>Collision resistance: </strong>It should be highly unlikely to get the same output for two different inputs.</li>\n<li>\n<strong>Preimage resistance:</strong> It should be computationally infeasible to find the input that matches a given hash function.</li>\n<li>\n<strong>Deterministic: </strong>The same input should always produce the same hash\u00a0result.</li>\n<li>\n<strong>Avalanche effect: </strong>A small change in the input should result in a completely different hash\u00a0value.</li>\n<li>\n<strong>Hidden:</strong> It should be difficult to guess the input from the\u00a0output.</li>\n<li>\n<strong>Puzzle-friendly: </strong>It should be difficult to choose an input that produces a specific\u00a0output.</li>\n<li>\n<strong>Quick Computation</strong>: The hash value should be computationally efficient to compute for any input\u00a0size.</li>\n</ul>\n<h3>Types of Hashing Algorithms</h3>\n<p><strong>MD5 (Message Digest Algorithm 5):</strong></p>\n<ul>\n<li>Developed by Ronald Rivest in\u00a01991.</li>\n<li>Produces a 128-bit (16-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Vulnerable to collision attacks; considered cryptographically broken and unsuitable for further use in security applications.</li>\n</ul>\n<p><strong>SHA-1 (Secure Hash Algorithm 1):</strong></p>\n<ul>\n<li>Developed by the NSA and published by NIST in\u00a01993.</li>\n<li>Produces a 160-bit (20-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Vulnerable to collision attacks; deprecated for most cryptographic uses.</li>\n</ul>\n<p><strong>SHA-256 (Secure Hash Algorithm 256):</strong></p>\n<ul>\n<li>Part of the SHA-2 family, developed by the NSA and published by NIST in\u00a02001.</li>\n<li>Produces a 256-bit (32-byte) hash\u00a0value.</li>\n<li>\n<strong>Security</strong>: Currently considered secure and widely used in various security applications.</li>\n</ul>\n<h3><strong>Cryptographic vs Non-Cryptographic Hash Functions</strong></h3>\n<ul>\n<li>The distinction between cryptographic and non-cryptographic hash functions lies primarily in their <strong>design goals and properties.</strong>\n</li>\n<li>\n<strong>Cryptographic hash functions </strong>prioritize security guarantees such as resistance to pre-image attacks and collision attacks, making them suitable for cryptographic protocols and applications where data integrity and authenticity are paramount. <br>Eg\u00a0: Digital Signatures, Data Integrity and Password\u00a0Hashing.</li>\n<li>\n<strong>Non-cryptographic hash functions,</strong> on the other hand, focus on speed and efficiency, catering to applications where security requirements are less stringent and performance is critical.<br>Eg\u00a0: Hash Tables, Checksums, Data Structures</li>\n</ul>\n<h3>Hash Collisions</h3>\n<ul>\n<li>In hashing, collisions occur when two distinct keys map to the same hash value within the hash\u00a0table.</li>\n<li>We have a hash table with a capacity of 4 entries (slots 0\u20133). This means it can hold a maximum of 4 key-value pairs.</li>\n<li>We use a basic hash function that takes the key modulo (remainder after division) by the table capacity (4). This is denoted as key %\u00a04.</li>\n</ul>\n<p><strong>Keys and\u00a0Hashes:</strong></p>\n<ul>\n<li>Key: \u201cuser123\u201d (hash value: \u201cuser123\u201d % 4 =\u00a03)</li>\n<li>Key: \u201cadmin\u201d (hash value: \u201cadmin\u201d % 4 =\u00a03)</li>\n</ul>\n<p>Both \u201cuser123\u201d and \u201cadmin\u201d map to the same hash index (3) due to the limited addressing space (4 slots) and the compression by the hash function (mod 4). This creates a collision.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*59WuBBLfHKTZQ5LhCdbgKA.png\"><figcaption>Hash collision</figcaption></figure><h3>Handling the collision</h3>\n<p><strong>1. Separate Chaining:</strong></p>\n<ul>\n<li>Imagine each slot in the hash table can hold a linked\u00a0list.</li>\n<li>When a collision occurs (like with \u201cuser123\u201d and \u201cadmin\u201d in your example), both keys are added to the same linked list attached to the slot with the colliding hash value (slot 3 in this\u00a0case).</li>\n<li>This creates a separate chain of elements that share the same hash\u00a0index.</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6lWBE_w1jR_b3EAO6V8lXQ.png\"><figcaption>Seperate Chaining</figcaption></figure><p><strong>Benefits:</strong></p>\n<ul>\n<li>Simple to implement.</li>\n<li>Works well for a moderate number of collisions.</li>\n</ul>\n<p><strong>Drawbacks:</strong></p>\n<ul><li>In the worst case, if many keys collide and end up in the same linked list, searching for a specific key can become slow as you need to traverse the entire\u00a0list.</li></ul>\n<p><strong>2. Linear\u00a0Probing:</strong></p>\n<ul>\n<li>This approach attempts to insert the key in the next available slot after the initial collision point.</li>\n<li>In your example, with \u201cuser123\u201d and \u201cadmin\u201d colliding at slot 3, linear probing would check slot 4(since it\u2019s the next available slot).</li>\n<li>If slot 4 is empty, \u201cadmin\u201d would be placed there.(depending on the table\u2019s fill pattern).</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tmUeD2ELG3KxKaCPVjimRw.png\"></figure><p><strong>Benefits:</strong></p>\n<ul>\n<li>No need for additional data structures like linked\u00a0lists.</li>\n<li>Can be faster than separate chaining for a small number of collisions.</li>\n</ul>\n<p><strong>Drawbacks:</strong></p>\n<ul><li>In the worst case, if the table is nearly full, linear probing might keep searching for empty slots, causing a performance issue known as clustering.</li></ul>\n<h3>Strategies for Hash Collision Prevention</h3>\n<p>While collisions are unavoidable, there are techniques to minimize their occurrence and maintain the effectiveness of your hash\u00a0table.</p>\n<p><strong>1. Using Strong Hash Functions:</strong></p>\n<ul>\n<li>The first line of defense is choosing a well-established and cryptographically secure hash function. These functions are designed to distribute keys uniformly across the hash table space, reducing the likelihood of collisions.</li>\n<li>Common examples include SHA-256 and\u00a0SHA-3.</li>\n</ul>\n<p><strong>2. Increasing Hash Table\u00a0Size:</strong></p>\n<ul>\n<li>A larger hash table offers more space for keys to be distributed, reducing the probability of collisions occurring.</li>\n<li>However, this comes with the trade-off of increased memory\u00a0usage.</li>\n</ul>\n<p><strong>3. Salting:</strong></p>\n<ul>\n<li>When hashing passwords or other sensitive data, adding a random string (salt) before hashing significantly reduces the chance of collisions.</li>\n<li>Even if two passwords collide after salting, the attacker would need to find a collision for the specific salt used, making it much more difficult to crack passwords.</li>\n</ul>\n<p><strong>4. Choosing Appropriate Hash Function Parameters:</strong></p>\n<ul><li>Some hash functions allow for configurable parameters that influence the output size and collision resistance. Choosing the right parameters ensures a balance between security and performance. For example, a larger hash value generally offers better collision resistance but requires more storage\u00a0space.</li></ul>\n<p><strong>5. Load\u00a0Factor:</strong></p>\n<ul>\n<li>The load factor represents the percentage of slots in the hash table that are filled. Maintaining a moderate load factor (around 50%) helps to keep collisions at\u00a0control.</li>\n<li>If the load factor becomes too high, consider increasing the hash table\u00a0size.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ff1d242b050b\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["data-structures","algorithms","linear-probing","collision","hashing"]},{"title":"Beyond Plates: Unveiling the Power of Stacks in Programming using C","pubDate":"2024-06-17 04:11:11","link":"https://augustinejoseph.medium.com/beyond-plates-unveiling-the-power-of-stacks-in-programming-using-c-33a44c02fe6b?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/33a44c02fe6b","author":"Augustine Joseph","thumbnail":"","description":"\n<p>A stack is a fundamental linear data structure that follows the Last-In-First-Out(LIFO) principle. It\u2019s analogous to a stack of plates: you can only add or remove plates from the\u00a0top.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uUzvb7LogK3c5vyUP-ANtw.png\"><figcaption>Stack Data Structure in\u00a0C</figcaption></figure><h4>Use Cases\u00a0:</h4>\n<ul>\n<li>\n<strong>Function Call Stack:</strong> The system automatically uses a stack to manage function calls. When a function is called, its arguments, local variables, and return address are pushed onto the stack. When the function returns, its information is popped from the\u00a0stack.</li>\n<li>\n<strong>Expression Evaluation:</strong> Stacks are used to evaluate expressions in reverse Polish Notation (RPN). Operands are pushed onto the stack, and operators are applied to the top elements.</li>\n<li>\n<strong>Backtracking Algorithms:</strong> Backtracking algorithms often use stacks to store alternative paths to explore and then backtrack by popping from the stack when a dead end is encountered.</li>\n<li>\n<strong>Undo/Redo Functionality:</strong> Stacks can be used to implement undo/redo functionality in applications by storing past actions on the stack and allowing users to revert or redo\u00a0them.</li>\n</ul>\n<h4>Stack Operations:</h4>\n<ul>\n<li>\n<strong>Push:</strong> Adding an element to the top of the\u00a0stack.</li>\n<li>\n<strong>Pop:</strong> Removing and returning the element at the top of the\u00a0stack.</li>\n<li>\n<strong>Peek:</strong> Viewing the element at the top of the stack without removing\u00a0it.</li>\n</ul>\n<h4>Stack in Computers:</h4>\n<ul>\n<li>\n<strong>Function Calls in Computer Programs:<br>\u200a\u2014\u200aPush:</strong> When a function is called, its arguments, local variables, and return address are pushed onto a stack (creating a new frame on the stack). <br>\u2014 <strong>Pop:</strong> When a function returns, its information is popped from the stack (its frame is removed). <br>\u2014 <strong>Peek:</strong> (Not typically used directly) But conceptually, peeking at the stack would be like looking at the arguments and local variables of the currently running function.</li>\n<li>\n<strong>Undo/Redo Functionality: <br>\u2014 Push:</strong> Each action performed is added (pushed) onto a stack, creating a history. <br>\u2014 <strong>Pop:</strong> When \u201cundo\u201d is selected, the last action is removed (popped) from the stack, reverting the change. <br>\u2014 <strong>Peek:</strong> (Not always used) But peeking at the stack could reveal the last action in the history (helpful for understanding what can be\u00a0undone).</li>\n</ul>\n<pre>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br><br>int choice, stack[10], top = 0, element;<br><br>void menu();<br>void push();<br>void pop();<br>void showElements();<br><br>int main() {<br>    menu();<br><br>    while (1) {<br>        printf(\"Enter one of the following options:\\n\");<br>        printf(\"PUSH 1\\nPOP 2\\nSHOW ELEMENTS 3\\nEXIT 4\\n\");<br>        scanf(\"%d\", &amp;choice);<br><br>        switch (choice) {<br>            case 1:<br>                push();<br>                break;<br>            case 2:<br>                pop();<br>                break;<br>            case 3:<br>                showElements();<br>                break;<br>            case 4:<br>                exit(0); // Terminate the program<br>            default:<br>                printf(\"Invalid choice. Please enter a number between 1 and 4.\\n\");<br>        }<br>    }<br><br>    return 0; // Not strictly necessary in this case, but good practice<br>}<br><br>void menu() {<br>    printf(\"Stack Operations Menu\\n\");<br>}<br><br>void push() {<br>    if (top == 9) {<br>        printf(\"Stack overflow\\n\");<br>        return;<br>    }<br><br>    printf(\"Enter the element to be pushed: \");<br>    scanf(\"%d\", &amp;element);<br>    stack[top++] = element;<br>}<br><br>void pop() {<br>    if (top == 0) {<br>        printf(\"Stack underflow\\n\");<br>        return;<br>    }<br><br>    element = stack[--top];<br>    printf(\"Popped element: %d\\n\", element);<br>}<br><br>void showElements() {<br>    if (top == 0) {<br>        printf(\"Stack is empty\\n\");<br>        return;<br>    }<br><br>    printf(\"Stack elements: \");<br>    for (int i = top - 1; i &gt;= 0; i--) {<br>        printf(\"%d \", stack[i]);<br>    }<br>    printf(\"\\n\");<br>}</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=33a44c02fe6b\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>A stack is a fundamental linear data structure that follows the Last-In-First-Out(LIFO) principle. It\u2019s analogous to a stack of plates: you can only add or remove plates from the\u00a0top.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uUzvb7LogK3c5vyUP-ANtw.png\"><figcaption>Stack Data Structure in\u00a0C</figcaption></figure><h4>Use Cases\u00a0:</h4>\n<ul>\n<li>\n<strong>Function Call Stack:</strong> The system automatically uses a stack to manage function calls. When a function is called, its arguments, local variables, and return address are pushed onto the stack. When the function returns, its information is popped from the\u00a0stack.</li>\n<li>\n<strong>Expression Evaluation:</strong> Stacks are used to evaluate expressions in reverse Polish Notation (RPN). Operands are pushed onto the stack, and operators are applied to the top elements.</li>\n<li>\n<strong>Backtracking Algorithms:</strong> Backtracking algorithms often use stacks to store alternative paths to explore and then backtrack by popping from the stack when a dead end is encountered.</li>\n<li>\n<strong>Undo/Redo Functionality:</strong> Stacks can be used to implement undo/redo functionality in applications by storing past actions on the stack and allowing users to revert or redo\u00a0them.</li>\n</ul>\n<h4>Stack Operations:</h4>\n<ul>\n<li>\n<strong>Push:</strong> Adding an element to the top of the\u00a0stack.</li>\n<li>\n<strong>Pop:</strong> Removing and returning the element at the top of the\u00a0stack.</li>\n<li>\n<strong>Peek:</strong> Viewing the element at the top of the stack without removing\u00a0it.</li>\n</ul>\n<h4>Stack in Computers:</h4>\n<ul>\n<li>\n<strong>Function Calls in Computer Programs:<br>\u200a\u2014\u200aPush:</strong> When a function is called, its arguments, local variables, and return address are pushed onto a stack (creating a new frame on the stack). <br>\u2014 <strong>Pop:</strong> When a function returns, its information is popped from the stack (its frame is removed). <br>\u2014 <strong>Peek:</strong> (Not typically used directly) But conceptually, peeking at the stack would be like looking at the arguments and local variables of the currently running function.</li>\n<li>\n<strong>Undo/Redo Functionality: <br>\u2014 Push:</strong> Each action performed is added (pushed) onto a stack, creating a history. <br>\u2014 <strong>Pop:</strong> When \u201cundo\u201d is selected, the last action is removed (popped) from the stack, reverting the change. <br>\u2014 <strong>Peek:</strong> (Not always used) But peeking at the stack could reveal the last action in the history (helpful for understanding what can be\u00a0undone).</li>\n</ul>\n<pre>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br><br>int choice, stack[10], top = 0, element;<br><br>void menu();<br>void push();<br>void pop();<br>void showElements();<br><br>int main() {<br>    menu();<br><br>    while (1) {<br>        printf(\"Enter one of the following options:\\n\");<br>        printf(\"PUSH 1\\nPOP 2\\nSHOW ELEMENTS 3\\nEXIT 4\\n\");<br>        scanf(\"%d\", &amp;choice);<br><br>        switch (choice) {<br>            case 1:<br>                push();<br>                break;<br>            case 2:<br>                pop();<br>                break;<br>            case 3:<br>                showElements();<br>                break;<br>            case 4:<br>                exit(0); // Terminate the program<br>            default:<br>                printf(\"Invalid choice. Please enter a number between 1 and 4.\\n\");<br>        }<br>    }<br><br>    return 0; // Not strictly necessary in this case, but good practice<br>}<br><br>void menu() {<br>    printf(\"Stack Operations Menu\\n\");<br>}<br><br>void push() {<br>    if (top == 9) {<br>        printf(\"Stack overflow\\n\");<br>        return;<br>    }<br><br>    printf(\"Enter the element to be pushed: \");<br>    scanf(\"%d\", &amp;element);<br>    stack[top++] = element;<br>}<br><br>void pop() {<br>    if (top == 0) {<br>        printf(\"Stack underflow\\n\");<br>        return;<br>    }<br><br>    element = stack[--top];<br>    printf(\"Popped element: %d\\n\", element);<br>}<br><br>void showElements() {<br>    if (top == 0) {<br>        printf(\"Stack is empty\\n\");<br>        return;<br>    }<br><br>    printf(\"Stack elements: \");<br>    for (int i = top - 1; i &gt;= 0; i--) {<br>        printf(\"%d \", stack[i]);<br>    }<br>    printf(\"\\n\");<br>}</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=33a44c02fe6b\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Postfix Notation (Reverse Polish Notation or RPN)","pubDate":"2024-06-17 03:41:27","link":"https://augustinejoseph.medium.com/postfix-notation-reverse-polish-notation-or-rpn-aa64edce1c51?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/aa64edce1c51","author":"Augustine Joseph","thumbnail":"","description":"\n<p><strong>Infix Notation:<br></strong>Infix notation is the standard arithmetic notation where operators are positioned between operands within an expression. This format is familiar in everyday mathematics and serves as the conventional way humans read and write mathematical operations. <br>Eg\u00a0: ((7 + 3) * (4 - 2)) /\u00a05</p>\n<p><strong>Prefix Notation (</strong>Polish notation<strong>):<br></strong>Prefix notation is the notation in which operators are placed before the corresponding operands in the expression. <br>Eg\u00a0:/ * + 7 3\u20134 2\u00a05</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Gm439SfRWThWUs1VQwlrpw.png\"><figcaption><strong>Postfix Notation </strong>(Reverse Polish Notation or\u00a0RPN)</figcaption></figure><p><strong>Postfix Notation (</strong>Reverse Polish Notation<strong>):<br></strong>Postfix notation is the notation in which operators are placed after the corresponding operands in the expression. <br>Eg\u00a0:7 3 + 4 2\u200a\u2014\u200a* 5\u00a0/</p>\n<blockquote>\n<strong><em>Infix notation:</em></strong><em> A + B <br></em><strong><em>Postfix notation:</em></strong><em> AB+<br></em><strong><em>Prefix notation\u00a0:\u00a0+AB</em></strong>\n</blockquote>\n<ul>\n<li>Postfix notation is also called as \u2018suffix notation\u2019 and \u2018reverse\u00a0polish\u2019.</li>\n<li>In the postfix notation, any expression can be written unambiguously without parentheses.</li>\n<li>The ordinary (infix) way of writing the sum of x and y is with operator in the middle: x * y. But in the postfix notation, we place the operator at the right end as xy\u00a0*.</li>\n<li>In postfix notation, the operator follows the\u00a0operand.</li>\n</ul>\n<p><strong>Advantages of Postfix over Prefix Notations:</strong></p>\n<ul>\n<li>Postfix notation has fewer overheads of parenthesis. i.e., it takes less time for\u00a0parsing.</li>\n<li>Postfix expressions can be evaluated easily as compared to other notations.</li>\n</ul>\n<h4>Example 1:\u00a0Addition</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 3 +\u00a04</li>\n<li>\n<strong>Postfix</strong>: 3 4\u00a0+</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 3 4 + means \"add 3 to 4\". The + operator follows its operands (3 and\u00a04).</li>\n</ul>\n<h4>Example 2: Subtraction</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 8 -\u00a05</li>\n<li>\n<strong>Postfix</strong>: 8 5\u00a0-</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 8 5 - means \"subtract 5 from 8\". The - operator follows its operands (8 and\u00a05).</li>\n</ul>\n<h4>Example 3: Multiplication</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 2 *\u00a06</li>\n<li>\n<strong>Postfix</strong>: 2 6\u00a0*</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 2 6 * means \"multiply 2 by 6\". The * operator follows its operands (2 and\u00a06).</li>\n</ul>\n<h4>Example 4:\u00a0Division</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 10 /\u00a02</li>\n<li>\n<strong>Postfix</strong>: 10 2\u00a0/</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 10 2 / means \"divide 10 by 2\". The / operator follows its operands (10 and\u00a02).</li>\n</ul>\n<h4>Example 5: Complex Expression</h4>\n<ul>\n<li>\n<strong>Infix</strong>: (3 + 4) * (6 -\u00a02)</li>\n<li>\n<strong>Postfix</strong>: 3 4 + 6 2 -\u00a0*</li>\n<li>\n<strong>Explanation</strong>:<br>\u2013 Convert each part: <br>\u2013 3 + 4 in postfix becomes 3 4 +.<br>\u2013 6 - 2 in postfix becomes 6 2 -.<br>\u2013 Combine both parts with * in postfix notation: 3 4 + 6 2 -\u00a0*.</li>\n<li>\n<strong>Evaluation steps:<br></strong>\u2013Push 3 and 4 onto the stack.<br>\u2013Encounter +: Pop 3 and 4, compute 3 + 4 = 7, push 7 onto the stack.<br>\u2013Push 6 and 2 onto the stack.<br>\u2013Encounter -: Pop 6 and 2, compute 6 - 2 = 4, push 4 onto the stack.<br>\u2013Encounter *: Pop 7 and 4, compute 7 * 4 = 28, push 28 onto the stack.<br>\u2013Result:\u00a028.</li>\n</ul>\n<h4>Example 6: More Complex Expression with Parentheses</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 5 + ((1 + 2) * 4) -\u00a03</li>\n<li>\n<strong>Postfix</strong>: 5 1 2 + 4 * + 3\u00a0-</li>\n<li>\n<strong>Explanation</strong>:</li>\n<li>\n<strong>Convert each part:<br></strong>\u20131 + 2 in postfix becomes 1 2 +. <br>\u2013(1 + 2) * 4 in postfix becomes 1 2 + 4 *. <br>\u2013Combine with + and - operators in postfix notation: 5 1 2 + 4 *\u00a0+3-</li>\n<li>\n<strong>Evaluation steps:<br></strong>\u2013Push 5 onto the stack.<br>\u2013Push 1 and 2 onto the stack.<br>\u2013Encounter +: Pop 1 and 2, compute 1 + 2 = 3, push 3 onto the stack.<br>\u2013Push 4 onto the stack.<br>\u2013Encounter *: Pop 3 and 4, compute 3 * 4 = 12, push 12 onto the stack.<br>\u2013Encounter +: Pop 5 and 12, compute 5 + 12 = 17, push 17 onto the stack.<br>\u2013Push 3 onto the stack.<br>\u2013Encounter -: Pop 17 and 3, compute 17 - 3 = 14, push 14 onto the stack.<br>\u2013Result:\u00a014.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=aa64edce1c51\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p><strong>Infix Notation:<br></strong>Infix notation is the standard arithmetic notation where operators are positioned between operands within an expression. This format is familiar in everyday mathematics and serves as the conventional way humans read and write mathematical operations. <br>Eg\u00a0: ((7 + 3) * (4 - 2)) /\u00a05</p>\n<p><strong>Prefix Notation (</strong>Polish notation<strong>):<br></strong>Prefix notation is the notation in which operators are placed before the corresponding operands in the expression. <br>Eg\u00a0:/ * + 7 3\u20134 2\u00a05</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Gm439SfRWThWUs1VQwlrpw.png\"><figcaption><strong>Postfix Notation </strong>(Reverse Polish Notation or\u00a0RPN)</figcaption></figure><p><strong>Postfix Notation (</strong>Reverse Polish Notation<strong>):<br></strong>Postfix notation is the notation in which operators are placed after the corresponding operands in the expression. <br>Eg\u00a0:7 3 + 4 2\u200a\u2014\u200a* 5\u00a0/</p>\n<blockquote>\n<strong><em>Infix notation:</em></strong><em> A + B <br></em><strong><em>Postfix notation:</em></strong><em> AB+<br></em><strong><em>Prefix notation\u00a0:\u00a0+AB</em></strong>\n</blockquote>\n<ul>\n<li>Postfix notation is also called as \u2018suffix notation\u2019 and \u2018reverse\u00a0polish\u2019.</li>\n<li>In the postfix notation, any expression can be written unambiguously without parentheses.</li>\n<li>The ordinary (infix) way of writing the sum of x and y is with operator in the middle: x * y. But in the postfix notation, we place the operator at the right end as xy\u00a0*.</li>\n<li>In postfix notation, the operator follows the\u00a0operand.</li>\n</ul>\n<p><strong>Advantages of Postfix over Prefix Notations:</strong></p>\n<ul>\n<li>Postfix notation has fewer overheads of parenthesis. i.e., it takes less time for\u00a0parsing.</li>\n<li>Postfix expressions can be evaluated easily as compared to other notations.</li>\n</ul>\n<h4>Example 1:\u00a0Addition</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 3 +\u00a04</li>\n<li>\n<strong>Postfix</strong>: 3 4\u00a0+</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 3 4 + means \"add 3 to 4\". The + operator follows its operands (3 and\u00a04).</li>\n</ul>\n<h4>Example 2: Subtraction</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 8 -\u00a05</li>\n<li>\n<strong>Postfix</strong>: 8 5\u00a0-</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 8 5 - means \"subtract 5 from 8\". The - operator follows its operands (8 and\u00a05).</li>\n</ul>\n<h4>Example 3: Multiplication</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 2 *\u00a06</li>\n<li>\n<strong>Postfix</strong>: 2 6\u00a0*</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 2 6 * means \"multiply 2 by 6\". The * operator follows its operands (2 and\u00a06).</li>\n</ul>\n<h4>Example 4:\u00a0Division</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 10 /\u00a02</li>\n<li>\n<strong>Postfix</strong>: 10 2\u00a0/</li>\n<li>\n<strong>Explanation</strong>: In postfix notation, 10 2 / means \"divide 10 by 2\". The / operator follows its operands (10 and\u00a02).</li>\n</ul>\n<h4>Example 5: Complex Expression</h4>\n<ul>\n<li>\n<strong>Infix</strong>: (3 + 4) * (6 -\u00a02)</li>\n<li>\n<strong>Postfix</strong>: 3 4 + 6 2 -\u00a0*</li>\n<li>\n<strong>Explanation</strong>:<br>\u2013 Convert each part: <br>\u2013 3 + 4 in postfix becomes 3 4 +.<br>\u2013 6 - 2 in postfix becomes 6 2 -.<br>\u2013 Combine both parts with * in postfix notation: 3 4 + 6 2 -\u00a0*.</li>\n<li>\n<strong>Evaluation steps:<br></strong>\u2013Push 3 and 4 onto the stack.<br>\u2013Encounter +: Pop 3 and 4, compute 3 + 4 = 7, push 7 onto the stack.<br>\u2013Push 6 and 2 onto the stack.<br>\u2013Encounter -: Pop 6 and 2, compute 6 - 2 = 4, push 4 onto the stack.<br>\u2013Encounter *: Pop 7 and 4, compute 7 * 4 = 28, push 28 onto the stack.<br>\u2013Result:\u00a028.</li>\n</ul>\n<h4>Example 6: More Complex Expression with Parentheses</h4>\n<ul>\n<li>\n<strong>Infix</strong>: 5 + ((1 + 2) * 4) -\u00a03</li>\n<li>\n<strong>Postfix</strong>: 5 1 2 + 4 * + 3\u00a0-</li>\n<li>\n<strong>Explanation</strong>:</li>\n<li>\n<strong>Convert each part:<br></strong>\u20131 + 2 in postfix becomes 1 2 +. <br>\u2013(1 + 2) * 4 in postfix becomes 1 2 + 4 *. <br>\u2013Combine with + and - operators in postfix notation: 5 1 2 + 4 *\u00a0+3-</li>\n<li>\n<strong>Evaluation steps:<br></strong>\u2013Push 5 onto the stack.<br>\u2013Push 1 and 2 onto the stack.<br>\u2013Encounter +: Pop 1 and 2, compute 1 + 2 = 3, push 3 onto the stack.<br>\u2013Push 4 onto the stack.<br>\u2013Encounter *: Pop 3 and 4, compute 3 * 4 = 12, push 12 onto the stack.<br>\u2013Encounter +: Pop 5 and 12, compute 5 + 12 = 17, push 17 onto the stack.<br>\u2013Push 3 onto the stack.<br>\u2013Encounter -: Pop 17 and 3, compute 17 - 3 = 14, push 14 onto the stack.<br>\u2013Result:\u00a014.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=aa64edce1c51\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["arithmetic","data-structures","polish","notation","prefix"]},{"title":"Binary Search in C","pubDate":"2024-06-16 12:41:53","link":"https://augustinejoseph.medium.com/binary-search-in-c-3562807d5fe6?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/3562807d5fe6","author":"Augustine Joseph","thumbnail":"","description":"\n<p>Binary search is a search algorithm that excels at finding the position of a specific value (target) within a <strong>sorted array</strong>. <br>It works by repeatedly dividing the search interval in half and eliminating the half where the target cannot be by dividing the array into half.<br>It works only on sorted\u00a0array.</p>\n<h4>ARRAY</h4>\n<p><strong>Collection of elements:</strong> Arrays store a fixed-size collection of elements of the same data type under a single variable\u00a0name.</p>\n<pre>data_type array_name[size]; <br>// Example: int numbers[10];</pre>\n<ul>\n<li>\n<strong>Initialization:<br></strong>During declaration (optional): int months[12] = {1, 2, 3,\u00a0...};<br>After declaration: months[0] =\u00a01;</li>\n<li>\n<strong>Accessing elements:<br></strong>Zero-based indexing: numbers[3] accesses the fourth element.<br>Out-of-bounds access leads to undefined behavior.</li>\n</ul>\n<h4>SEARCH</h4>\n<p><strong>Linear search:</strong> A basic search algorithm that iterates through each element of an array sequentially until the target element is found or the end is\u00a0reached.</p>\n<ul>\n<li>Time complexity: O(n) in the worst case (target element not present or at the\u00a0end).</li>\n<li>Not efficient for large\u00a0arrays.</li>\n</ul>\n<p><strong>BINARY SEARCH</strong></p>\n<ul>\n<li>\n<strong>Efficient search for sorted arrays:</strong> Only applicable to arrays that are sorted in ascending or descending order.</li>\n<li><strong>Divide-and-conquer approach:</strong></li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ga25O5BakV-wHW_Q7vbH8w.png\"><figcaption>Binary search pseudo\u00a0code</figcaption></figure><ul><li>\n<strong>Time complexity:</strong> O(log n) in the worst and average cases, significantly faster than linear search for large sorted\u00a0arrays.</li></ul>\n<pre>#include &lt;stdio.h&gt;<br><br>// Function to perform binary search on a sorted array<br>// Parameters:<br>// - arr[]: The sorted array to be searched<br>// - length: Number of elements in the array<br>// - target: Element to be searched for<br>// - left: Starting index of the search range<br>// - right: Ending index of the search range<br>// Returns the index of the target element if found, otherwise returns -1<br><br>int binarySearch(int arr[], int length, int target, int left, int right) {<br>    while (left &lt;= right) {<br>        int mid = left + (right - left) / 2; // Calculate the middle index<br><br>        if (arr[mid] == target)<br>            return mid; // Return index of target element if found<br><br>        if (arr[mid] &lt; target)<br>            left = mid + 1; // Adjust left boundary if target is in the right half<br>        else<br>            right = mid - 1; // Adjust right boundary if target is in the left half<br>    }<br><br>    return -1; // Return -1 if target element is not found<br>}<br><br>int main() {<br>    int arr[] = {2, 5, 8, 12, 16, 23, 38, 56, 72, 91}; // Sorted array<br>    int length = sizeof(arr) / sizeof(arr[0]); // Calculate number of elements in arr<br>    int target = 23; // Element to search for<br>    int result = binarySearch(arr, length, target, 0, length - 1); // Perform binary search<br><br>    if (result == -1)<br>        printf(\"Element %d is not present in the array\\n\", target);<br>    else<br>        printf(\"Element %d is present at index %d\\n\", target, result);<br><br>    return 0;<br>}</pre>\n<p>Hereint length = sizeof(arr) / sizeof(arr[0]); calculates the number of elements in the\u00a0array.</p>\n<ul>\n<li>\n<strong>sizeof(arr)</strong>: This operator returns the total number of bytes occupied by the array arr in memory. This size includes all elements of the array multiplied by the size of each\u00a0element.</li>\n<li>\n<strong>sizeof(arr[0])</strong>: This operator returns the size of the first element of the array arr. Since arrays in C are contiguous blocks of memory, the size of one element (arr[0]) is the same as the size of all other elements in the\u00a0array.</li>\n<li>\n<strong>Division</strong>: By dividing sizeof(arr) by sizeof(arr[0]), we get the number of elements in the array arr. This calculation works because sizeof(arr) gives us the total size of the array in bytes, and sizeof(arr[0]) gives us the size of one element. Therefore, the division gives us the number of elements (n) in the array\u00a0arr.</li>\n<li>Example:</li>\n</ul>\n<pre>int arr[] = {1, 3, 5, 7, 9};</pre>\n<ul>\n<li>sizeof(arr) would typically be 5 * sizeof(int) if int occupies 4 bytes in memory (assuming a typical\u00a0system).</li>\n<li>sizeof(arr[0]) would be sizeof(int).</li>\n</ul>\n<p>Therefore, sizeof(arr) / sizeof(arr[0]) would be 5, which is the number of elements in the array\u00a0arr.</p>\n<h4>Advantages of sizeof(arr) / sizeof(arr[0]):</h4>\n<ol>\n<li>\n<strong>Compile-Time Computation</strong>: This method computes the array size at compile-time, which is efficient and does not require additional runtime calculations.</li>\n<li>\n<strong>Works with Statically Allocated Arrays</strong>: It is well-suited for arrays defined statically within the same scope where their size needs to be determined.</li>\n<li>\n<strong>Independent of Data Type</strong>: It calculates the number of elements regardless of the data type (int, char, etc.) of the array elements.</li>\n</ol>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=3562807d5fe6\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Binary search is a search algorithm that excels at finding the position of a specific value (target) within a <strong>sorted array</strong>. <br>It works by repeatedly dividing the search interval in half and eliminating the half where the target cannot be by dividing the array into half.<br>It works only on sorted\u00a0array.</p>\n<h4>ARRAY</h4>\n<p><strong>Collection of elements:</strong> Arrays store a fixed-size collection of elements of the same data type under a single variable\u00a0name.</p>\n<pre>data_type array_name[size]; <br>// Example: int numbers[10];</pre>\n<ul>\n<li>\n<strong>Initialization:<br></strong>During declaration (optional): int months[12] = {1, 2, 3,\u00a0...};<br>After declaration: months[0] =\u00a01;</li>\n<li>\n<strong>Accessing elements:<br></strong>Zero-based indexing: numbers[3] accesses the fourth element.<br>Out-of-bounds access leads to undefined behavior.</li>\n</ul>\n<h4>SEARCH</h4>\n<p><strong>Linear search:</strong> A basic search algorithm that iterates through each element of an array sequentially until the target element is found or the end is\u00a0reached.</p>\n<ul>\n<li>Time complexity: O(n) in the worst case (target element not present or at the\u00a0end).</li>\n<li>Not efficient for large\u00a0arrays.</li>\n</ul>\n<p><strong>BINARY SEARCH</strong></p>\n<ul>\n<li>\n<strong>Efficient search for sorted arrays:</strong> Only applicable to arrays that are sorted in ascending or descending order.</li>\n<li><strong>Divide-and-conquer approach:</strong></li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ga25O5BakV-wHW_Q7vbH8w.png\"><figcaption>Binary search pseudo\u00a0code</figcaption></figure><ul><li>\n<strong>Time complexity:</strong> O(log n) in the worst and average cases, significantly faster than linear search for large sorted\u00a0arrays.</li></ul>\n<pre>#include &lt;stdio.h&gt;<br><br>// Function to perform binary search on a sorted array<br>// Parameters:<br>// - arr[]: The sorted array to be searched<br>// - length: Number of elements in the array<br>// - target: Element to be searched for<br>// - left: Starting index of the search range<br>// - right: Ending index of the search range<br>// Returns the index of the target element if found, otherwise returns -1<br><br>int binarySearch(int arr[], int length, int target, int left, int right) {<br>    while (left &lt;= right) {<br>        int mid = left + (right - left) / 2; // Calculate the middle index<br><br>        if (arr[mid] == target)<br>            return mid; // Return index of target element if found<br><br>        if (arr[mid] &lt; target)<br>            left = mid + 1; // Adjust left boundary if target is in the right half<br>        else<br>            right = mid - 1; // Adjust right boundary if target is in the left half<br>    }<br><br>    return -1; // Return -1 if target element is not found<br>}<br><br>int main() {<br>    int arr[] = {2, 5, 8, 12, 16, 23, 38, 56, 72, 91}; // Sorted array<br>    int length = sizeof(arr) / sizeof(arr[0]); // Calculate number of elements in arr<br>    int target = 23; // Element to search for<br>    int result = binarySearch(arr, length, target, 0, length - 1); // Perform binary search<br><br>    if (result == -1)<br>        printf(\"Element %d is not present in the array\\n\", target);<br>    else<br>        printf(\"Element %d is present at index %d\\n\", target, result);<br><br>    return 0;<br>}</pre>\n<p>Hereint length = sizeof(arr) / sizeof(arr[0]); calculates the number of elements in the\u00a0array.</p>\n<ul>\n<li>\n<strong>sizeof(arr)</strong>: This operator returns the total number of bytes occupied by the array arr in memory. This size includes all elements of the array multiplied by the size of each\u00a0element.</li>\n<li>\n<strong>sizeof(arr[0])</strong>: This operator returns the size of the first element of the array arr. Since arrays in C are contiguous blocks of memory, the size of one element (arr[0]) is the same as the size of all other elements in the\u00a0array.</li>\n<li>\n<strong>Division</strong>: By dividing sizeof(arr) by sizeof(arr[0]), we get the number of elements in the array arr. This calculation works because sizeof(arr) gives us the total size of the array in bytes, and sizeof(arr[0]) gives us the size of one element. Therefore, the division gives us the number of elements (n) in the array\u00a0arr.</li>\n<li>Example:</li>\n</ul>\n<pre>int arr[] = {1, 3, 5, 7, 9};</pre>\n<ul>\n<li>sizeof(arr) would typically be 5 * sizeof(int) if int occupies 4 bytes in memory (assuming a typical\u00a0system).</li>\n<li>sizeof(arr[0]) would be sizeof(int).</li>\n</ul>\n<p>Therefore, sizeof(arr) / sizeof(arr[0]) would be 5, which is the number of elements in the array\u00a0arr.</p>\n<h4>Advantages of sizeof(arr) / sizeof(arr[0]):</h4>\n<ol>\n<li>\n<strong>Compile-Time Computation</strong>: This method computes the array size at compile-time, which is efficient and does not require additional runtime calculations.</li>\n<li>\n<strong>Works with Statically Allocated Arrays</strong>: It is well-suited for arrays defined statically within the same scope where their size needs to be determined.</li>\n<li>\n<strong>Independent of Data Type</strong>: It calculates the number of elements regardless of the data type (int, char, etc.) of the array elements.</li>\n</ol>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=3562807d5fe6\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["algorithms","binary-search","search","data-structures","optimization"]},{"title":"STORAGE CLASSES IN C","pubDate":"2024-06-10 06:40:33","link":"https://augustinejoseph.medium.com/storage-classes-in-c-873698bec728?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/873698bec728","author":"Augustine Joseph","thumbnail":"","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/777/1*5dKoVECHq9NLRtPwg8zdUg.png\"></figure><p>In C programming, storage classes define how variables and functions are stored in memory, affecting their visibility (scope) and lifetime within the program. Here are the four main storage\u00a0classes:</p>\n<h4><strong>Automatic (default):</strong></h4>\n<ul>\n<li>Variables declared within a block (curly braces {}) or function\u00a0body.</li>\n<li>\n<strong>Scope</strong>: Local to the block or function where they are declared.</li>\n<li>\n<strong>Lifetime</strong>: Created when the block or function is entered, destroyed when it\u00a0exits.</li>\n<li>\n<strong>Use</strong>: For most local variables that only need to exist during a specific code\u00a0section.</li>\n</ul>\n<pre>void doSomething() {<br>    int x = 10; // Automatic variable<br>}</pre>\n<h4><strong>External:</strong></h4>\n<ul>\n<li>Variables declared outside any block or function (typically at the beginning of a\u00a0file).</li>\n<li>\n<strong>Scope</strong>: Global, accessible from anywhere in the program (same file or linked\u00a0files).</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution.</li>\n<li>\n<strong>Use</strong>: For variables that need to be shared across multiple functions.</li>\n<li>Excessive use of global variables can lead to code complexity and maintainability issues.</li>\n</ul>\n<pre>int global_count = 0; // External variable<br><br>void incrementCount() {<br>    global_count++;<br>}<br><br>void printCount() {<br>    printf(\"Count: %d\\n\", global_count);<br>}</pre>\n<h4><strong>Static:</strong></h4>\n<p>Can be applied to both local and global variables.</p>\n<ol><li><strong>Local static:</strong></li></ol>\n<ul>\n<li>\n<strong>Scope</strong>: Local to the block or function where they are declared.</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution. Value persists between function\u00a0calls.</li>\n<li>\n<strong>Use</strong>: For variables that need to retain their value across function calls within the same block/function.</li>\n</ul>\n<p><strong>2. Global\u00a0static:</strong></p>\n<ul>\n<li>\n<strong>Scope</strong>: Limited to the file where they are declared (not truly global across\u00a0files).</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution.</li>\n</ul>\n<pre>void rememberValue() {<br>    static int value = 0; // Local static variable<br>    value++;<br>    printf(\"Value: %d\\n\", value);<br>}<br><br>int main() {<br>    rememberValue(); // Prints 1<br>    rememberValue(); // Prints 2 (value retains its state)<br>    return 0;<br>}</pre>\n<h4><strong>Register:</strong></h4>\n<ul>\n<li>Suggests the compiler to store the variable in a CPU register (faster access than\u00a0memory).</li>\n<li>Not a guarantee to store in register due to hardware limitations. The compiler decides based on hardware and optimization.</li>\n<li>\n<strong>Use</strong>: For small, frequently accessed variables (like loop counters) to potentially improve performance.</li>\n<li>Use sparingly, as it\u2019s compiler-dependent and may affect perfomance.</li>\n</ul>\n<pre>register int count; </pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=873698bec728\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/777/1*5dKoVECHq9NLRtPwg8zdUg.png\"></figure><p>In C programming, storage classes define how variables and functions are stored in memory, affecting their visibility (scope) and lifetime within the program. Here are the four main storage\u00a0classes:</p>\n<h4><strong>Automatic (default):</strong></h4>\n<ul>\n<li>Variables declared within a block (curly braces {}) or function\u00a0body.</li>\n<li>\n<strong>Scope</strong>: Local to the block or function where they are declared.</li>\n<li>\n<strong>Lifetime</strong>: Created when the block or function is entered, destroyed when it\u00a0exits.</li>\n<li>\n<strong>Use</strong>: For most local variables that only need to exist during a specific code\u00a0section.</li>\n</ul>\n<pre>void doSomething() {<br>    int x = 10; // Automatic variable<br>}</pre>\n<h4><strong>External:</strong></h4>\n<ul>\n<li>Variables declared outside any block or function (typically at the beginning of a\u00a0file).</li>\n<li>\n<strong>Scope</strong>: Global, accessible from anywhere in the program (same file or linked\u00a0files).</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution.</li>\n<li>\n<strong>Use</strong>: For variables that need to be shared across multiple functions.</li>\n<li>Excessive use of global variables can lead to code complexity and maintainability issues.</li>\n</ul>\n<pre>int global_count = 0; // External variable<br><br>void incrementCount() {<br>    global_count++;<br>}<br><br>void printCount() {<br>    printf(\"Count: %d\\n\", global_count);<br>}</pre>\n<h4><strong>Static:</strong></h4>\n<p>Can be applied to both local and global variables.</p>\n<ol><li><strong>Local static:</strong></li></ol>\n<ul>\n<li>\n<strong>Scope</strong>: Local to the block or function where they are declared.</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution. Value persists between function\u00a0calls.</li>\n<li>\n<strong>Use</strong>: For variables that need to retain their value across function calls within the same block/function.</li>\n</ul>\n<p><strong>2. Global\u00a0static:</strong></p>\n<ul>\n<li>\n<strong>Scope</strong>: Limited to the file where they are declared (not truly global across\u00a0files).</li>\n<li>\n<strong>Lifetime</strong>: Entire program execution.</li>\n</ul>\n<pre>void rememberValue() {<br>    static int value = 0; // Local static variable<br>    value++;<br>    printf(\"Value: %d\\n\", value);<br>}<br><br>int main() {<br>    rememberValue(); // Prints 1<br>    rememberValue(); // Prints 2 (value retains its state)<br>    return 0;<br>}</pre>\n<h4><strong>Register:</strong></h4>\n<ul>\n<li>Suggests the compiler to store the variable in a CPU register (faster access than\u00a0memory).</li>\n<li>Not a guarantee to store in register due to hardware limitations. The compiler decides based on hardware and optimization.</li>\n<li>\n<strong>Use</strong>: For small, frequently accessed variables (like loop counters) to potentially improve performance.</li>\n<li>Use sparingly, as it\u2019s compiler-dependent and may affect perfomance.</li>\n</ul>\n<pre>register int count; </pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=873698bec728\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["data-structure-algorithm","c-programming","performance","storage-classes-in-c","storageclass"]},{"title":"Everything about ARRAY","pubDate":"2024-05-26 06:24:52","link":"https://augustinejoseph.medium.com/everything-about-array-8c9718a6c20f?source=rss-a466d6a4ac30------2","guid":"https://medium.com/p/8c9718a6c20f","author":"Augustine Joseph","thumbnail":"","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*W2zzx7drNlJguEOVbiZREA.png\"></figure><ul>\n<li>The simplest form of array is a <strong>one-dimensional array</strong>\n</li>\n<li>Data is strored in <strong>contiguous memory locations.</strong>\n</li>\n<li>Arrays are classified as <strong>Homogeneous Data Structures </strong>because they<strong> </strong>store <strong>elements of the same\u00a0type</strong>.</li>\n<li>Cannot add different types of data to a same\u00a0array.</li>\n</ul>\n<h4>Fixed-Size Arrays and Dynamic\u00a0Arrays</h4>\n<ul>\n<li>\n<strong>Fixed-Size Arrays:</strong> In languages like C, arrays have a pre-defined size at the time of creation. Adding elements beyond this size is not possible and typically results in\u00a0errors.</li>\n<li>\n<strong>Dynamic Arrays (Resizeable Arrays):</strong> In languages like Python and Java, arrays can be resized dynamically to accommodate new elements.</li>\n</ul>\n<h3>Create an Array in\u00a0Python</h3>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br></pre>\n<p>Here i is the typecode (datatype)passed into the array. <br>Typecodes are alphabetic representations that are used to define the type of value the array is going to\u00a0store.</p>\n<p><strong>Type Code for\u00a0array</strong></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/731/1*mAx36uHEbwtvEk5Qqd33qg.png\"><figcaption><a href=\"https://docs.python.org/3/library/array.html\">https://docs.python.org/3/library/array.html</a></figcaption></figure><h3>Adding Elements to a\u00a0Array</h3>\n<ul>\n<li>Elements are added using the insert() function.</li>\n<li>Used to enter one or more data elements into the\u00a0array.</li>\n<li>insert(index, element_to_add), takes the first argument as the index where the element to be added and the second argument as the element to add to the\u00a0array.|</li>\n<li>append(element_to_add)adds the element to the end of the\u00a0array</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Add element in a particular index<br>array_one.insert(1,2)<br><br>#Add element to the end of the array<br>array_one.append(5)</pre>\n<h4><strong>Complexity for adding\u00a0elements</strong></h4>\n<p><strong>Fixed-Size Arrays:</strong></p>\n<ul>\n<li>\n<strong>Appending:</strong> Not possible (throws\u00a0errors)</li>\n<li>\n<strong>Inserting at Beginning/Middle:</strong> Not possible (throws\u00a0errors)</li>\n</ul>\n<p><strong>Dynamic Arrays:</strong></p>\n<ul>\n<li>\n<strong>Appending to the End:<br>Constant Time (O(1)) Average Case:</strong> In many dynamic arrays, appending an element involves updating a pointer or index to the end of the array. This is a constant time operation in most cases.<br><strong>Amortized Constant Time (O(1) amortized):</strong> Some dynamic arrays might need to be resized (allocated a new larger block of memory) when they reach capacity. This resizing operation can take some additional time. However, the overall cost of appending elements over a series of operations is considered amortized constant\u00a0time.</li>\n<li>\n<strong>Inserting at the Beginning/Middle:<br>Linear Time (O(n)) Worst Case:</strong> Inserting at the beginning or middle requires shifting existing elements to create space for the new element. In the worst case (e.g., inserting at the beginning of a full array), all elements need to be shifted, resulting in linear time complexity.</li>\n</ul>\n<h3>Accessing Elements from the\u00a0Array</h3>\n<ul>\n<li>Items in array are accessed using the index\u00a0number.</li>\n<li>Index operator [] is used in python and it is an\u00a0integer.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br>#Access the first item : index 0<br>array_one[0]</pre>\n<h4>Complexity for accessing elements</h4>\n<p><strong>Constant Time (O(1))</strong>: Accessing an element in an array by its index is a constant time operation. This is because arrays are stored in contiguous memory locations, and calculating the memory address of a specific element based on its index can be done very quickly.<br>The memory address of an element at index i can be calculated efficiently using a formula like base_address + (i * element_size). Here:</p>\n<ul>\n<li>base_address is the starting memory address of the\u00a0array.</li>\n<li>i is the index of the element you want to\u00a0access.</li>\n<li>element_size is the size of each element in bytes (determined by the data\u00a0type).</li>\n</ul>\n<h3>Removing Elements from the\u00a0Array</h3>\n<ul>\n<li>Elements can be removed from the Python array by using built-in <a href=\"https://www.geeksforgeeks.org/python-list-remove/\">remove(</a>)\u00a0function</li>\n<li>remove() method removes only one element at a time. It only removes the first occurance of the searched\u00a0element.</li>\n<li>To remove elements in a given range, pop() function is\u00a0used.</li>\n<li>By default, pop() removes the last element. To remove an element from a specific index, index of the elements are passed as argument.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Remove the number 3<br>array_one.remove(3)<br><br># Remove or pop the item at index 2<br>array_one.pop(2)</pre>\n<h4>Complexity for Removing\u00a0Elements</h4>\n<p><strong>Fixed-Size Arrays:</strong></p>\n<ul>\n<li>Generally it is not possible to remove elements after creation.</li>\n<li>Attempting removal might result in\u00a0errors.</li>\n</ul>\n<p><strong>Dynamic Arrays:</strong></p>\n<p><strong>1. Removing from the End\u00a0:</strong></p>\n<ul>\n<li>\n<strong>Amortized Constant Time (O(1) amortized):</strong> In many dynamic arrays, removing the last element often involves updating a pointer or index, which is a constant time operation.</li>\n<li>However, if the array needs to be shrunk due to frequent removals, the overall cost becomes amortized constant.</li>\n</ul>\n<p><strong>2. Removing from the Beginning or\u00a0Middle:</strong></p>\n<ul><li>\n<strong>Linear Time (O(n)) Worst Case:</strong> Removing from the beginning or middle requires shifting remaining elements to fill the gap created by the removal. In the worst case (e.g., removing from the beginning of a large array), all elements need to be shifted, leading to linear time complexity.</li></ul>\n<h3>Slicing of an\u00a0Array</h3>\n<ul>\n<li>Slicing an array is for extracting a sub-array from an existing\u00a0array.</li>\n<li>It allows to create a new array containing a specific portion of the original array, without modifying the original\u00a0itself.</li>\n<li>sliced_array = original_array[start:end:step]</li>\n<li>\n<strong>start (optional):</strong> This specifies the index of the first element to include in the slice (inclusive). Defaults to 0 (beginning of the array) if not provided.</li>\n<li>\n<strong>end (optional):</strong> This specifies the index of the element after the last element to include in the slice (exclusive). If not provided, the slice goes up to the end of the\u00a0array.</li>\n<li>\n<strong>step (optional):</strong> This specifies the step size for including elements. Defaults to 1 (includes every element). A step of 2 would include every other element, and so\u00a0on.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Slicing and creating an new array with 2 and 3<br>sliced_array = array_one[1,3]</pre>\n<h4>Complexity for Slicing\u00a0Elements</h4>\n<p>Slicing of the array incudes copying the sliced values internally. The number of iterations in the worst case (copying all elements in the slice) is directly proportional to the number of elements retrieved (k).</p>\n<h3>Searching Element in an\u00a0Array</h3>\n<ul><li>index() function is used to search for an element in an array. It returns the index of the first occurance of the value searched.</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Search for index of 2 by passing the value 2 to the index() function<br>index = array_one.index(2)<br><br># ==&gt; Returns 1, as value 2 is at 1st index in array_one named array</pre>\n<h4>Complexity for Searching Elements</h4>\n<ol><li><strong>Linear Search (Unsorted Arrays):</strong></li></ol>\n<ul>\n<li>\n<strong>Time Complexity:</strong> O(n) (worst case,\u00a0average)</li>\n<li>Linear search iterates through each element in the array one by one, comparing it to the target\u00a0element.</li>\n<li>In the worst case (target element is not present or at the end), the entire array needs to be scanned, resulting in O(n) complexity.</li>\n</ul>\n<p><strong>2. Binary Search (Sorted\u00a0Arrays):</strong></p>\n<ul><li>\n<strong>Time Complexity:</strong> O(log n) (best, average, worst\u00a0case)</li></ul>\n<h3>#Updating Elements in a\u00a0Array</h3>\n<ul><li>\n<strong>Accessing by Index and Assigning a New Value:<br></strong>This is the most common and straightforward approach. You use the element\u2019s index to access it and then assign a new\u00a0value:</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Updating 0th index value with 3<br>array_one[0] = 3</pre>\n<ul><li>\n<strong>Using a Loop to Update Multiple Elements:<br></strong>Iterate through the array using a loop and update elements based on conditions or calculations:</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Double the value of each element<br>for i in range(len(array_one)):<br>  my_array[i] *= 2<br></pre>\n<p>A loop iterates through each element\u2019s index (i) using range(len(array_one)).<br>Inside the loop, you can access the element using array_one[i] and modify it as\u00a0needed.</p>\n<ul><li>\n<strong>Using List Comprehension (Python) for Conditional Updates:<br></strong>List comprehension provides a concise way to create a new array with updated elements based on conditions.</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Update elements greater than 2 to 0<br>updated_array = [x if x &lt;= 2 else 0 for x in array_one]<br><br># ==&gt; Returns [1,2,0]<br></pre>\n<h4>Complexity for Updating\u00a0Elements</h4>\n<p>Updating elements in arrays by index and assignment is typically a constant time operation (O(1)) due to efficient memory access and assignment.</p>\n<h3>Different Operations on Python\u00a0Arrays</h3>\n<h4>Counting Elements in a\u00a0Array:</h4>\n<ul>\n<li>len() function:<br>Returns the total number of elements in the fuction.<br>Takes an array as argument.</li>\n<li>count() function:<br>Returns the number of occurances of a number or value<br>array_name.count(number) returns the frequency of\u00a0numbers.</li>\n</ul>\n<h4>Extending Elements in a\u00a0Array:</h4>\n<ul><li>extend() function:<br>Extend method takes an iterable (list of items) as an argument and joins them.<br>It works only with iterables of same data\u00a0type.</li></ul>\n<h4>Adding Elements to theArray:</h4>\n<ul>\n<li>insert() function:<br>array_name.insert(index, value) takes index at which to insert the value as first argument and the value to insert as second argument.</li>\n<li>append() function:<br>array_name.append(value) function adds the value to the end of the array. To add at a specific location, use the array_name.insert(index, value) function.</li>\n</ul>\n<h4>Remove Values from an\u00a0Array:</h4>\n<ul>\n<li>remove() function:<br>array_name.remove(value) function takes the value to remove as argument and removes the first occurance of the\u00a0value.</li>\n<li>pop() function:<br>array_name.pop(index) function takes the index as argument and removes the elment at that\u00a0index.</li>\n<li>clear() function:<br>array_name.clear() function clears all the elments in the\u00a0array.</li>\n</ul>\n<h4>Copy Values from an\u00a0Array:</h4>\n<p><strong>Shallow Copy:</strong></p>\n<ul>\n<li>copy() function:<br>copied_list = original_list.copy() makes a shallow copy of the array.<br>Both original_list and copied_list references to the same underlying data in the memory.<br>Changes made to the copied array/list will also be reflected in the original because they both point to the same\u00a0data.</li>\n<li>Slicing:<br>Slicing an array using [:] creates a new array object.<br>Both original_list and copied_list references to the same underlying data in the\u00a0memory.</li>\n</ul>\n<p><strong>Deep Copy:</strong></p>\n<ul><li>The deepcopy() function from the copy module is\u00a0used.</li></ul>\n<pre>import copy<br>copied_list = copy.deepcopy(original_list)</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8c9718a6c20f\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*W2zzx7drNlJguEOVbiZREA.png\"></figure><ul>\n<li>The simplest form of array is a <strong>one-dimensional array</strong>\n</li>\n<li>Data is strored in <strong>contiguous memory locations.</strong>\n</li>\n<li>Arrays are classified as <strong>Homogeneous Data Structures </strong>because they<strong> </strong>store <strong>elements of the same\u00a0type</strong>.</li>\n<li>Cannot add different types of data to a same\u00a0array.</li>\n</ul>\n<h4>Fixed-Size Arrays and Dynamic\u00a0Arrays</h4>\n<ul>\n<li>\n<strong>Fixed-Size Arrays:</strong> In languages like C, arrays have a pre-defined size at the time of creation. Adding elements beyond this size is not possible and typically results in\u00a0errors.</li>\n<li>\n<strong>Dynamic Arrays (Resizeable Arrays):</strong> In languages like Python and Java, arrays can be resized dynamically to accommodate new elements.</li>\n</ul>\n<h3>Create an Array in\u00a0Python</h3>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br></pre>\n<p>Here i is the typecode (datatype)passed into the array. <br>Typecodes are alphabetic representations that are used to define the type of value the array is going to\u00a0store.</p>\n<p><strong>Type Code for\u00a0array</strong></p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/731/1*mAx36uHEbwtvEk5Qqd33qg.png\"><figcaption><a href=\"https://docs.python.org/3/library/array.html\">https://docs.python.org/3/library/array.html</a></figcaption></figure><h3>Adding Elements to a\u00a0Array</h3>\n<ul>\n<li>Elements are added using the insert() function.</li>\n<li>Used to enter one or more data elements into the\u00a0array.</li>\n<li>insert(index, element_to_add), takes the first argument as the index where the element to be added and the second argument as the element to add to the\u00a0array.|</li>\n<li>append(element_to_add)adds the element to the end of the\u00a0array</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Add element in a particular index<br>array_one.insert(1,2)<br><br>#Add element to the end of the array<br>array_one.append(5)</pre>\n<h4><strong>Complexity for adding\u00a0elements</strong></h4>\n<p><strong>Fixed-Size Arrays:</strong></p>\n<ul>\n<li>\n<strong>Appending:</strong> Not possible (throws\u00a0errors)</li>\n<li>\n<strong>Inserting at Beginning/Middle:</strong> Not possible (throws\u00a0errors)</li>\n</ul>\n<p><strong>Dynamic Arrays:</strong></p>\n<ul>\n<li>\n<strong>Appending to the End:<br>Constant Time (O(1)) Average Case:</strong> In many dynamic arrays, appending an element involves updating a pointer or index to the end of the array. This is a constant time operation in most cases.<br><strong>Amortized Constant Time (O(1) amortized):</strong> Some dynamic arrays might need to be resized (allocated a new larger block of memory) when they reach capacity. This resizing operation can take some additional time. However, the overall cost of appending elements over a series of operations is considered amortized constant\u00a0time.</li>\n<li>\n<strong>Inserting at the Beginning/Middle:<br>Linear Time (O(n)) Worst Case:</strong> Inserting at the beginning or middle requires shifting existing elements to create space for the new element. In the worst case (e.g., inserting at the beginning of a full array), all elements need to be shifted, resulting in linear time complexity.</li>\n</ul>\n<h3>Accessing Elements from the\u00a0Array</h3>\n<ul>\n<li>Items in array are accessed using the index\u00a0number.</li>\n<li>Index operator [] is used in python and it is an\u00a0integer.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br>#Access the first item : index 0<br>array_one[0]</pre>\n<h4>Complexity for accessing elements</h4>\n<p><strong>Constant Time (O(1))</strong>: Accessing an element in an array by its index is a constant time operation. This is because arrays are stored in contiguous memory locations, and calculating the memory address of a specific element based on its index can be done very quickly.<br>The memory address of an element at index i can be calculated efficiently using a formula like base_address + (i * element_size). Here:</p>\n<ul>\n<li>base_address is the starting memory address of the\u00a0array.</li>\n<li>i is the index of the element you want to\u00a0access.</li>\n<li>element_size is the size of each element in bytes (determined by the data\u00a0type).</li>\n</ul>\n<h3>Removing Elements from the\u00a0Array</h3>\n<ul>\n<li>Elements can be removed from the Python array by using built-in <a href=\"https://www.geeksforgeeks.org/python-list-remove/\">remove(</a>)\u00a0function</li>\n<li>remove() method removes only one element at a time. It only removes the first occurance of the searched\u00a0element.</li>\n<li>To remove elements in a given range, pop() function is\u00a0used.</li>\n<li>By default, pop() removes the last element. To remove an element from a specific index, index of the elements are passed as argument.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Remove the number 3<br>array_one.remove(3)<br><br># Remove or pop the item at index 2<br>array_one.pop(2)</pre>\n<h4>Complexity for Removing\u00a0Elements</h4>\n<p><strong>Fixed-Size Arrays:</strong></p>\n<ul>\n<li>Generally it is not possible to remove elements after creation.</li>\n<li>Attempting removal might result in\u00a0errors.</li>\n</ul>\n<p><strong>Dynamic Arrays:</strong></p>\n<p><strong>1. Removing from the End\u00a0:</strong></p>\n<ul>\n<li>\n<strong>Amortized Constant Time (O(1) amortized):</strong> In many dynamic arrays, removing the last element often involves updating a pointer or index, which is a constant time operation.</li>\n<li>However, if the array needs to be shrunk due to frequent removals, the overall cost becomes amortized constant.</li>\n</ul>\n<p><strong>2. Removing from the Beginning or\u00a0Middle:</strong></p>\n<ul><li>\n<strong>Linear Time (O(n)) Worst Case:</strong> Removing from the beginning or middle requires shifting remaining elements to fill the gap created by the removal. In the worst case (e.g., removing from the beginning of a large array), all elements need to be shifted, leading to linear time complexity.</li></ul>\n<h3>Slicing of an\u00a0Array</h3>\n<ul>\n<li>Slicing an array is for extracting a sub-array from an existing\u00a0array.</li>\n<li>It allows to create a new array containing a specific portion of the original array, without modifying the original\u00a0itself.</li>\n<li>sliced_array = original_array[start:end:step]</li>\n<li>\n<strong>start (optional):</strong> This specifies the index of the first element to include in the slice (inclusive). Defaults to 0 (beginning of the array) if not provided.</li>\n<li>\n<strong>end (optional):</strong> This specifies the index of the element after the last element to include in the slice (exclusive). If not provided, the slice goes up to the end of the\u00a0array.</li>\n<li>\n<strong>step (optional):</strong> This specifies the step size for including elements. Defaults to 1 (includes every element). A step of 2 would include every other element, and so\u00a0on.</li>\n</ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Slicing and creating an new array with 2 and 3<br>sliced_array = array_one[1,3]</pre>\n<h4>Complexity for Slicing\u00a0Elements</h4>\n<p>Slicing of the array incudes copying the sliced values internally. The number of iterations in the worst case (copying all elements in the slice) is directly proportional to the number of elements retrieved (k).</p>\n<h3>Searching Element in an\u00a0Array</h3>\n<ul><li>index() function is used to search for an element in an array. It returns the index of the first occurance of the value searched.</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Search for index of 2 by passing the value 2 to the index() function<br>index = array_one.index(2)<br><br># ==&gt; Returns 1, as value 2 is at 1st index in array_one named array</pre>\n<h4>Complexity for Searching Elements</h4>\n<ol><li><strong>Linear Search (Unsorted Arrays):</strong></li></ol>\n<ul>\n<li>\n<strong>Time Complexity:</strong> O(n) (worst case,\u00a0average)</li>\n<li>Linear search iterates through each element in the array one by one, comparing it to the target\u00a0element.</li>\n<li>In the worst case (target element is not present or at the end), the entire array needs to be scanned, resulting in O(n) complexity.</li>\n</ul>\n<p><strong>2. Binary Search (Sorted\u00a0Arrays):</strong></p>\n<ul><li>\n<strong>Time Complexity:</strong> O(log n) (best, average, worst\u00a0case)</li></ul>\n<h3>#Updating Elements in a\u00a0Array</h3>\n<ul><li>\n<strong>Accessing by Index and Assigning a New Value:<br></strong>This is the most common and straightforward approach. You use the element\u2019s index to access it and then assign a new\u00a0value:</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Updating 0th index value with 3<br>array_one[0] = 3</pre>\n<ul><li>\n<strong>Using a Loop to Update Multiple Elements:<br></strong>Iterate through the array using a loop and update elements based on conditions or calculations:</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Double the value of each element<br>for i in range(len(array_one)):<br>  my_array[i] *= 2<br></pre>\n<p>A loop iterates through each element\u2019s index (i) using range(len(array_one)).<br>Inside the loop, you can access the element using array_one[i] and modify it as\u00a0needed.</p>\n<ul><li>\n<strong>Using List Comprehension (Python) for Conditional Updates:<br></strong>List comprehension provides a concise way to create a new array with updated elements based on conditions.</li></ul>\n<pre>import array as arr<br># creating an integer data type array<br>array_one = arr.array('i',[1,2,3])<br><br># Update elements greater than 2 to 0<br>updated_array = [x if x &lt;= 2 else 0 for x in array_one]<br><br># ==&gt; Returns [1,2,0]<br></pre>\n<h4>Complexity for Updating\u00a0Elements</h4>\n<p>Updating elements in arrays by index and assignment is typically a constant time operation (O(1)) due to efficient memory access and assignment.</p>\n<h3>Different Operations on Python\u00a0Arrays</h3>\n<h4>Counting Elements in a\u00a0Array:</h4>\n<ul>\n<li>len() function:<br>Returns the total number of elements in the fuction.<br>Takes an array as argument.</li>\n<li>count() function:<br>Returns the number of occurances of a number or value<br>array_name.count(number) returns the frequency of\u00a0numbers.</li>\n</ul>\n<h4>Extending Elements in a\u00a0Array:</h4>\n<ul><li>extend() function:<br>Extend method takes an iterable (list of items) as an argument and joins them.<br>It works only with iterables of same data\u00a0type.</li></ul>\n<h4>Adding Elements to theArray:</h4>\n<ul>\n<li>insert() function:<br>array_name.insert(index, value) takes index at which to insert the value as first argument and the value to insert as second argument.</li>\n<li>append() function:<br>array_name.append(value) function adds the value to the end of the array. To add at a specific location, use the array_name.insert(index, value) function.</li>\n</ul>\n<h4>Remove Values from an\u00a0Array:</h4>\n<ul>\n<li>remove() function:<br>array_name.remove(value) function takes the value to remove as argument and removes the first occurance of the\u00a0value.</li>\n<li>pop() function:<br>array_name.pop(index) function takes the index as argument and removes the elment at that\u00a0index.</li>\n<li>clear() function:<br>array_name.clear() function clears all the elments in the\u00a0array.</li>\n</ul>\n<h4>Copy Values from an\u00a0Array:</h4>\n<p><strong>Shallow Copy:</strong></p>\n<ul>\n<li>copy() function:<br>copied_list = original_list.copy() makes a shallow copy of the array.<br>Both original_list and copied_list references to the same underlying data in the memory.<br>Changes made to the copied array/list will also be reflected in the original because they both point to the same\u00a0data.</li>\n<li>Slicing:<br>Slicing an array using [:] creates a new array object.<br>Both original_list and copied_list references to the same underlying data in the\u00a0memory.</li>\n</ul>\n<p><strong>Deep Copy:</strong></p>\n<ul><li>The deepcopy() function from the copy module is\u00a0used.</li></ul>\n<pre>import copy<br>copied_list = copy.deepcopy(original_list)</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8c9718a6c20f\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]}]}","status":200,"url":"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@augustinejoseph"},"revalidate":31536000,"tags":[]}